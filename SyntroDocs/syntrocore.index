<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE QDOCINDEX>
<INDEX url="http://richards-tech.com" title="SyntroCore Documentation" version="1.0.0" project="SyntroCore">
    <namespace threadsafety="unspecified" name="" access="public" status="commendable">
        <class threadsafety="unspecified" name="Endpoint" href="endpoint.html" access="public" status="commendable" location="Endpoint.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Endpoint.h" lineno="133" bases="SyntroThread" module="SyntroLib" brief="Endpoint is the main interface between app clients and Syntro.">
            <function threadsafety="unspecified" name="CFSCancelQuery" fullname="Endpoint::CFSCancelQuery" href="endpoint.html#CFSCancelQuery" access="protected" status="commendable" location="Endpoint.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/Endpoint.cpp" lineno="2600" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="CFSCancelQuery(int serviceEP, int handle)">
                <parameter left="int" right="" name="serviceEP" default=""/>
                <parameter left="int" right="" name="handle" default=""/>
            </function>
            <function threadsafety="unspecified" name="CFSCancelQueryResponse" fullname="Endpoint::CFSCancelQueryResponse" href="endpoint.html#CFSCancelQueryResponse" access="protected" status="commendable" location="Endpoint.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/Endpoint.cpp" lineno="3266" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="CFSCancelQueryResponse(int serviceEP, int handle, unsigned int responseCode)">
                <parameter left="int" right="" name="serviceEP" default=""/>
                <parameter left="int" right="" name="handle" default=""/>
                <parameter left="unsigned int" right="" name="responseCode" default=""/>
            </function>
            <function threadsafety="unspecified" name="CFSFetchQuery" fullname="Endpoint::CFSFetchQuery" href="endpoint.html#CFSFetchQuery" access="protected" status="commendable" location="Endpoint.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/Endpoint.cpp" lineno="2643" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="CFSFetchQuery(int serviceEP, int handle, int maxRows, int resultType)">
                <parameter left="int" right="" name="serviceEP" default=""/>
                <parameter left="int" right="" name="handle" default=""/>
                <parameter left="int" right="" name="maxRows" default=""/>
                <parameter left="int" right="" name="resultType" default="SYNTROCFS_QUERY_RESULT_TYPE_ROW_DATA"/>
            </function>
            <function threadsafety="unspecified" name="CFSFetchQueryResponse" fullname="Endpoint::CFSFetchQueryResponse" href="endpoint.html#CFSFetchQueryResponse" access="protected" status="commendable" location="Endpoint.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/Endpoint.cpp" lineno="3316" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="CFSFetchQueryResponse(int serviceEP, int handle, unsigned int responseCode, int firstRow, int lastRow, int param1, int param2, int length, unsigned char * data)">
                <parameter left="int" right="" name="serviceEP" default=""/>
                <parameter left="int" right="" name="handle" default=""/>
                <parameter left="unsigned int" right="" name="responseCode" default=""/>
                <parameter left="int" right="" name="firstRow" default=""/>
                <parameter left="int" right="" name="lastRow" default=""/>
                <parameter left="int" right="" name="param1" default=""/>
                <parameter left="int" right="" name="param2" default=""/>
                <parameter left="int" right="" name="length" default=""/>
                <parameter left="unsigned char *" right="" name="data" default=""/>
            </function>
            <function threadsafety="unspecified" name="CFSOpenRawFile" fullname="Endpoint::CFSOpenRawFile" href="endpoint.html#CFSOpenRawFile" access="protected" status="commendable" location="Endpoint.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/Endpoint.cpp" lineno="2328" virtual="non" meta="plain" const="false" static="false" overload="false" type="int" signature="CFSOpenRawFile(int serviceEP, QString filePath, int blockSize)">
                <parameter left="int" right="" name="serviceEP" default=""/>
                <parameter left="QString" right="" name="filePath" default=""/>
                <parameter left="int" right="" name="blockSize" default="128"/>
            </function>
            <function threadsafety="unspecified" name="CFSOpenStructuredFile" fullname="Endpoint::CFSOpenStructuredFile" href="endpoint.html#CFSOpenStructuredFile" access="protected" status="commendable" location="Endpoint.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/Endpoint.cpp" lineno="2323" virtual="non" meta="plain" const="false" static="false" overload="false" type="int" signature="CFSOpenStructuredFile(int serviceEP, QString filePath)">
                <parameter left="int" right="" name="serviceEP" default=""/>
                <parameter left="QString" right="" name="filePath" default=""/>
            </function>
            <function threadsafety="unspecified" name="CFSQuery" fullname="Endpoint::CFSQuery" href="endpoint.html#CFSQuery" access="protected" status="commendable" location="Endpoint.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/Endpoint.cpp" lineno="2554" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="CFSQuery(int serviceEP, int handle, QString sql)">
                <parameter left="int" right="" name="serviceEP" default=""/>
                <parameter left="int" right="" name="handle" default=""/>
                <parameter left="QString" right="" name="sql" default=""/>
            </function>
            <function threadsafety="unspecified" name="CFSQueryResponse" fullname="Endpoint::CFSQueryResponse" href="endpoint.html#CFSQueryResponse" access="protected" status="commendable" location="Endpoint.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/Endpoint.cpp" lineno="3226" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="CFSQueryResponse(int serviceEP, int handle, unsigned int responseCode)">
                <parameter left="int" right="" name="serviceEP" default=""/>
                <parameter left="int" right="" name="handle" default=""/>
                <parameter left="unsigned int" right="" name="responseCode" default=""/>
            </function>
            <function threadsafety="unspecified" name="CFSAddEP" fullname="Endpoint::CFSAddEP" href="endpoint.html#CFSAddEP" access="protected" status="commendable" location="Endpoint.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Endpoint.h" lineno="341" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="CFSAddEP(int serviceEP)">
                <parameter left="int" right="" name="serviceEP" default=""/>
            </function>
            <function threadsafety="unspecified" name="CFSClose" fullname="Endpoint::CFSClose" href="endpoint.html#CFSClose" access="protected" status="commendable" location="Endpoint.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Endpoint.h" lineno="393" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="CFSClose(int serviceEP, int handle)">
                <parameter left="int" right="" name="serviceEP" default=""/>
                <parameter left="int" right="" name="handle" default=""/>
            </function>
            <function threadsafety="unspecified" name="CFSCloseResponse" fullname="Endpoint::CFSCloseResponse" href="endpoint.html#CFSCloseResponse" access="protected" status="commendable" location="Endpoint.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Endpoint.h" lineno="399" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="CFSCloseResponse(int serviceEP, unsigned int responseCode, int handle)">
                <parameter left="int" right="" name="serviceEP" default=""/>
                <parameter left="unsigned int" right="" name="responseCode" default=""/>
                <parameter left="int" right="" name="handle" default=""/>
            </function>
            <function threadsafety="unspecified" name="updateState" fullname="Endpoint::updateState" href="endpoint.html#updateState" access="private" status="commendable" location="Endpoint.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/Endpoint.cpp" lineno="1162" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="updateState(QString msg)">
                <parameter left="QString" right="" name="msg" default=""/>
            </function>
            <function threadsafety="unspecified" name="CFSOpen" fullname="Endpoint::CFSOpen" href="endpoint.html#CFSOpen" access="private" status="commendable" location="Endpoint.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/Endpoint.cpp" lineno="2339" virtual="non" meta="plain" const="false" static="false" overload="false" type="int" signature="CFSOpen(int serviceEP, QString filePath, int cfsMode, int blockSize)">
                <parameter left="int" right="" name="serviceEP" default=""/>
                <parameter left="QString" right="" name="filePath" default=""/>
                <parameter left="int" right="" name="cfsMode" default=""/>
                <parameter left="int" right="" name="blockSize" default=""/>
            </function>
            <function threadsafety="unspecified" name="finishThread" fullname="Endpoint::finishThread" href="endpoint.html#finishThread" access="private" status="commendable" location="Endpoint.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/Endpoint.cpp" lineno="1067" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="finishThread()"/>
            <function threadsafety="unspecified" name="CFSProcessMessage" fullname="Endpoint::CFSProcessMessage" href="endpoint.html#CFSProcessMessage" access="private" status="internal" location="Endpoint.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Endpoint.h" lineno="544" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="CFSProcessMessage(SYNTRO_EHEAD * pE2E, int nLen, int dstPort)">
                <parameter left="SYNTRO_EHEAD *" right="" name="pE2E" default=""/>
                <parameter left="int" right="" name="nLen" default=""/>
                <parameter left="int" right="" name="dstPort" default=""/>
            </function>
            <function threadsafety="unspecified" name="CFSBackground" fullname="Endpoint::CFSBackground" href="endpoint.html#CFSBackground" access="private" status="internal" location="Endpoint.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Endpoint.h" lineno="543" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="CFSBackground()"/>
            <function threadsafety="unspecified" name="CFSBuildRequest" fullname="Endpoint::CFSBuildRequest" href="endpoint.html#CFSBuildRequest" access="private" status="internal" location="Endpoint.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Endpoint.h" lineno="542" virtual="non" meta="plain" const="false" static="false" overload="false" type="SYNTRO_EHEAD *" signature="CFSBuildRequest(int serviceEP, int length)">
                <parameter left="int" right="" name="serviceEP" default=""/>
                <parameter left="int" right="" name="length" default=""/>
            </function>
            <function threadsafety="unspecified" name="CFSInit" fullname="Endpoint::CFSInit" href="endpoint.html#CFSInit" access="private" status="internal" location="Endpoint.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Endpoint.h" lineno="541" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="CFSInit()"/>
            <function threadsafety="unspecified" name="CFSProcessFetchQueryResponse" fullname="Endpoint::CFSProcessFetchQueryResponse" href="endpoint.html#CFSProcessFetchQueryResponse" access="private" status="commendable" location="Endpoint.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/Endpoint.cpp" lineno="3272" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="CFSProcessFetchQueryResponse(SYNTRO_CFSHEADER * cfsHdr, int dstPort)">
                <parameter left="SYNTRO_CFSHEADER *" right="" name="cfsHdr" default=""/>
                <parameter left="int" right="" name="dstPort" default=""/>
            </function>
            <function threadsafety="unspecified" name="CFSProcessCancelQueryResponse" fullname="Endpoint::CFSProcessCancelQueryResponse" href="endpoint.html#CFSProcessCancelQueryResponse" access="private" status="commendable" location="Endpoint.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/Endpoint.cpp" lineno="3232" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="CFSProcessCancelQueryResponse(SYNTRO_CFSHEADER * cfsHdr, int dstPort)">
                <parameter left="SYNTRO_CFSHEADER *" right="" name="cfsHdr" default=""/>
                <parameter left="int" right="" name="dstPort" default=""/>
            </function>
            <function threadsafety="unspecified" name="CFSProcessQueryResponse" fullname="Endpoint::CFSProcessQueryResponse" href="endpoint.html#CFSProcessQueryResponse" access="private" status="commendable" location="Endpoint.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/Endpoint.cpp" lineno="3192" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="CFSProcessQueryResponse(SYNTRO_CFSHEADER * cfsHdr, int dstPort)">
                <parameter left="SYNTRO_CFSHEADER *" right="" name="cfsHdr" default=""/>
                <parameter left="int" right="" name="dstPort" default=""/>
            </function>
            <function threadsafety="unspecified" name="CFSProcessWriteAtIndexResponse" fullname="Endpoint::CFSProcessWriteAtIndexResponse" href="endpoint.html#CFSProcessWriteAtIndexResponse" access="private" status="internal" location="Endpoint.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Endpoint.h" lineno="550" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="CFSProcessWriteAtIndexResponse(SYNTRO_CFSHEADER * cfsHdr, int dstPort)">
                <parameter left="SYNTRO_CFSHEADER *" right="" name="cfsHdr" default=""/>
                <parameter left="int" right="" name="dstPort" default=""/>
            </function>
            <function threadsafety="unspecified" name="CFSProcessReadAtIndexResponse" fullname="Endpoint::CFSProcessReadAtIndexResponse" href="endpoint.html#CFSProcessReadAtIndexResponse" access="private" status="internal" location="Endpoint.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Endpoint.h" lineno="549" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="CFSProcessReadAtIndexResponse(SYNTRO_CFSHEADER * cfsHdr, int dstPort)">
                <parameter left="SYNTRO_CFSHEADER *" right="" name="cfsHdr" default=""/>
                <parameter left="int" right="" name="dstPort" default=""/>
            </function>
            <function threadsafety="unspecified" name="CFSProcessKeepAliveResponse" fullname="Endpoint::CFSProcessKeepAliveResponse" href="endpoint.html#CFSProcessKeepAliveResponse" access="private" status="internal" location="Endpoint.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Endpoint.h" lineno="548" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="CFSProcessKeepAliveResponse(SYNTRO_CFSHEADER * cfsHdr, int dstPort)">
                <parameter left="SYNTRO_CFSHEADER *" right="" name="cfsHdr" default=""/>
                <parameter left="int" right="" name="dstPort" default=""/>
            </function>
            <function threadsafety="unspecified" name="CFSProcessCloseResponse" fullname="Endpoint::CFSProcessCloseResponse" href="endpoint.html#CFSProcessCloseResponse" access="private" status="internal" location="Endpoint.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Endpoint.h" lineno="547" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="CFSProcessCloseResponse(SYNTRO_CFSHEADER * cfsHdr, int dstPort)">
                <parameter left="SYNTRO_CFSHEADER *" right="" name="cfsHdr" default=""/>
                <parameter left="int" right="" name="dstPort" default=""/>
            </function>
            <function threadsafety="unspecified" name="CFSProcessOpenResponse" fullname="Endpoint::CFSProcessOpenResponse" href="endpoint.html#CFSProcessOpenResponse" access="private" status="internal" location="Endpoint.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Endpoint.h" lineno="546" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="CFSProcessOpenResponse(SYNTRO_CFSHEADER * cfsHdr, int dstPort)">
                <parameter left="SYNTRO_CFSHEADER *" right="" name="cfsHdr" default=""/>
                <parameter left="int" right="" name="dstPort" default=""/>
            </function>
            <function threadsafety="unspecified" name="CFSProcessDirResponse" fullname="Endpoint::CFSProcessDirResponse" href="endpoint.html#CFSProcessDirResponse" access="private" status="internal" location="Endpoint.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Endpoint.h" lineno="545" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="CFSProcessDirResponse(SYNTRO_CFSHEADER * cfsHdr, int dstPort)">
                <parameter left="SYNTRO_CFSHEADER *" right="" name="cfsHdr" default=""/>
                <parameter left="int" right="" name="dstPort" default=""/>
            </function>
            <function threadsafety="unspecified" name="CFSDeleteEP" fullname="Endpoint::CFSDeleteEP" href="endpoint.html#CFSDeleteEP" access="protected" status="commendable" location="Endpoint.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Endpoint.h" lineno="345" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="CFSDeleteEP(int serviceEP)">
                <parameter left="int" right="" name="serviceEP" default=""/>
            </function>
            <function threadsafety="unspecified" name="CFSDir" fullname="Endpoint::CFSDir" href="endpoint.html#CFSDir" access="protected" status="commendable" location="Endpoint.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Endpoint.h" lineno="356" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="CFSDir(int serviceEP, int cfsDirParam)">
                <parameter left="int" right="" name="serviceEP" default=""/>
                <parameter left="int" right="" name="cfsDirParam" default="SYNTROCFS_DIR_PARAM_LIST_ALL"/>
            </function>
            <function threadsafety="unspecified" name="CFSDirResponse" fullname="Endpoint::CFSDirResponse" href="endpoint.html#CFSDirResponse" access="protected" status="commendable" location="Endpoint.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Endpoint.h" lineno="361" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="CFSDirResponse(int serviceEP, unsigned int responseCode, QStringList filePaths)">
                <parameter left="int" right="" name="serviceEP" default=""/>
                <parameter left="unsigned int" right="" name="responseCode" default=""/>
                <parameter left="QStringList" right="" name="filePaths" default=""/>
            </function>
            <function threadsafety="unspecified" name="CFSKeepAliveTimeout" fullname="Endpoint::CFSKeepAliveTimeout" href="endpoint.html#CFSKeepAliveTimeout" access="protected" status="commendable" location="Endpoint.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Endpoint.h" lineno="405" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="CFSKeepAliveTimeout(int serviceEP, int handle)">
                <parameter left="int" right="" name="serviceEP" default=""/>
                <parameter left="int" right="" name="handle" default=""/>
            </function>
            <function threadsafety="unspecified" name="CFSOpenDB" fullname="Endpoint::CFSOpenDB" href="endpoint.html#CFSOpenDB" access="protected" status="commendable" location="Endpoint.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Endpoint.h" lineno="366" virtual="non" meta="plain" const="false" static="false" overload="false" type="int" signature="CFSOpenDB(int serviceEP, QString databaseName)">
                <parameter left="int" right="" name="serviceEP" default=""/>
                <parameter left="QString" right="" name="databaseName" default=""/>
            </function>
            <function threadsafety="unspecified" name="CFSOpenResponse" fullname="Endpoint::CFSOpenResponse" href="endpoint.html#CFSOpenResponse" access="protected" status="commendable" location="Endpoint.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Endpoint.h" lineno="386" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="CFSOpenResponse(int remoteServiceEP, unsigned int responseCode, int handle, unsigned int fileLength)">
                <parameter left="int" right="" name="remoteServiceEP" default=""/>
                <parameter left="unsigned int" right="" name="responseCode" default=""/>
                <parameter left="int" right="" name="handle" default=""/>
                <parameter left="unsigned int" right="" name="fileLength" default=""/>
            </function>
            <function threadsafety="unspecified" name="CFSReadAtIndex" fullname="Endpoint::CFSReadAtIndex" href="endpoint.html#CFSReadAtIndex" access="protected" status="commendable" location="Endpoint.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Endpoint.h" lineno="411" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="CFSReadAtIndex(int serviceEP, int handle, unsigned int index, int blockCount)">
                <parameter left="int" right="" name="serviceEP" default=""/>
                <parameter left="int" right="" name="handle" default=""/>
                <parameter left="unsigned int" right="" name="index" default=""/>
                <parameter left="int" right="" name="blockCount" default="1"/>
            </function>
            <function threadsafety="unspecified" name="CFSReadAtIndexResponse" fullname="Endpoint::CFSReadAtIndexResponse" href="endpoint.html#CFSReadAtIndexResponse" access="protected" status="commendable" location="Endpoint.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Endpoint.h" lineno="417" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="CFSReadAtIndexResponse(int serviceEP, int handle, unsigned int index, unsigned int responseCode, unsigned char * fileData, int length)">
                <parameter left="int" right="" name="serviceEP" default=""/>
                <parameter left="int" right="" name="handle" default=""/>
                <parameter left="unsigned int" right="" name="index" default=""/>
                <parameter left="unsigned int" right="" name="responseCode" default=""/>
                <parameter left="unsigned char *" right="" name="fileData" default=""/>
                <parameter left="int" right="" name="length" default=""/>
            </function>
            <function threadsafety="unspecified" name="CFSWriteAtIndex" fullname="Endpoint::CFSWriteAtIndex" href="endpoint.html#CFSWriteAtIndex" access="protected" status="commendable" location="Endpoint.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Endpoint.h" lineno="429" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="CFSWriteAtIndex(int serviceEP, int handle, unsigned int index, unsigned char * fileData, int length)">
                <parameter left="int" right="" name="serviceEP" default=""/>
                <parameter left="int" right="" name="handle" default=""/>
                <parameter left="unsigned int" right="" name="index" default=""/>
                <parameter left="unsigned char *" right="" name="fileData" default=""/>
                <parameter left="int" right="" name="length" default=""/>
            </function>
            <function threadsafety="unspecified" name="CFSWriteAtIndexResponse" fullname="Endpoint::CFSWriteAtIndexResponse" href="endpoint.html#CFSWriteAtIndexResponse" access="protected" status="commendable" location="Endpoint.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Endpoint.h" lineno="434" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="CFSWriteAtIndexResponse(int serviceEP, int handle, unsigned int index, unsigned int responseCode)">
                <parameter left="int" right="" name="serviceEP" default=""/>
                <parameter left="int" right="" name="handle" default=""/>
                <parameter left="unsigned int" right="" name="index" default=""/>
                <parameter left="unsigned int" right="" name="responseCode" default=""/>
            </function>
            <function threadsafety="unspecified" name="Endpoint" fullname="Endpoint::Endpoint" href="endpoint.html#Endpoint" access="public" status="commendable" location="Endpoint.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Endpoint.h" lineno="137" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="Endpoint(qint64 backgroundInterval, const char * compType)">
                <parameter left="qint64" right="" name="backgroundInterval" default=""/>
                <parameter left="const char *" right="" name="compType" default=""/>
            </function>
            <function threadsafety="unspecified" name="appClientBackground" fullname="Endpoint::appClientBackground" href="endpoint.html#appClientBackground" access="protected" status="commendable" location="Endpoint.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Endpoint.h" lineno="326" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="appClientBackground()"/>
            <function threadsafety="unspecified" name="appClientClosed" fullname="Endpoint::appClientClosed" href="endpoint.html#appClientClosed" access="protected" status="commendable" location="Endpoint.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Endpoint.h" lineno="313" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="appClientClosed()"/>
            <function threadsafety="unspecified" name="appClientConnected" fullname="Endpoint::appClientConnected" href="endpoint.html#appClientConnected" access="protected" status="commendable" location="Endpoint.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Endpoint.h" lineno="309" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="appClientConnected()"/>
            <function threadsafety="unspecified" name="appClientExit" fullname="Endpoint::appClientExit" href="endpoint.html#appClientExit" access="protected" status="commendable" location="Endpoint.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Endpoint.h" lineno="287" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="appClientExit()"/>
            <function threadsafety="unspecified" name="appClientHeartbeat" fullname="Endpoint::appClientHeartbeat" href="endpoint.html#appClientHeartbeat" access="protected" status="commendable" location="Endpoint.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Endpoint.h" lineno="317" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="appClientHeartbeat(SYNTRO_HEARTBEAT * heartbeat, int length)">
                <parameter left="SYNTRO_HEARTBEAT *" right="" name="heartbeat" default=""/>
                <parameter left="int" right="" name="length" default=""/>
            </function>
            <function threadsafety="unspecified" name="appClientInit" fullname="Endpoint::appClientInit" href="endpoint.html#appClientInit" access="protected" status="commendable" location="Endpoint.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Endpoint.h" lineno="283" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="appClientInit()"/>
            <function threadsafety="unspecified" name="appClientProcessThreadMessage" fullname="Endpoint::appClientProcessThreadMessage" href="endpoint.html#appClientProcessThreadMessage" access="protected" status="commendable" location="Endpoint.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Endpoint.h" lineno="332" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="appClientProcessThreadMessage(SyntroThreadMsg * msg)">
                <parameter left="SyntroThreadMsg *" right="" name="msg" default=""/>
            </function>
            <function threadsafety="unspecified" name="appClientReceiveDirectory" fullname="Endpoint::appClientReceiveDirectory" href="endpoint.html#appClientReceiveDirectory" access="protected" status="commendable" location="Endpoint.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Endpoint.h" lineno="321" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="appClientReceiveDirectory(QStringList directory)">
                <parameter left="QStringList" right="" name="directory" default=""/>
            </function>
            <function threadsafety="unspecified" name="appClientReceiveE2E" fullname="Endpoint::appClientReceiveE2E" href="endpoint.html#appClientReceiveE2E" access="protected" status="commendable" location="Endpoint.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Endpoint.h" lineno="305" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="appClientReceiveE2E(int servicePort, SYNTRO_EHEAD * message, int length)">
                <parameter left="int" right="" name="servicePort" default=""/>
                <parameter left="SYNTRO_EHEAD *" right="" name="message" default=""/>
                <parameter left="int" right="" name="length" default=""/>
            </function>
            <function threadsafety="unspecified" name="appClientReceiveMulticast" fullname="Endpoint::appClientReceiveMulticast" href="endpoint.html#appClientReceiveMulticast" access="protected" status="commendable" location="Endpoint.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Endpoint.h" lineno="293" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="appClientReceiveMulticast(int servicePort, SYNTRO_EHEAD * message, int length)">
                <parameter left="int" right="" name="servicePort" default=""/>
                <parameter left="SYNTRO_EHEAD *" right="" name="message" default=""/>
                <parameter left="int" right="" name="length" default=""/>
            </function>
            <function threadsafety="unspecified" name="appClientReceiveMulticastAck" fullname="Endpoint::appClientReceiveMulticastAck" href="endpoint.html#appClientReceiveMulticastAck" access="protected" status="commendable" location="Endpoint.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Endpoint.h" lineno="299" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="appClientReceiveMulticastAck(int servicePort, SYNTRO_EHEAD * message, int length)">
                <parameter left="int" right="" name="servicePort" default=""/>
                <parameter left="SYNTRO_EHEAD *" right="" name="message" default=""/>
                <parameter left="int" right="" name="length" default=""/>
            </function>
            <function threadsafety="unspecified" name="clientAddService" fullname="Endpoint::clientAddService" href="endpoint.html#clientAddService" access="protected" status="commendable" location="Endpoint.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Endpoint.h" lineno="184" virtual="non" meta="plain" const="false" static="false" overload="false" type="int" signature="clientAddService(QString servicePath, int serviceType, bool local, bool enabled)">
                <parameter left="QString" right="" name="servicePath" default=""/>
                <parameter left="int" right="" name="serviceType" default=""/>
                <parameter left="bool" right="" name="local" default=""/>
                <parameter left="bool" right="" name="enabled" default="true"/>
            </function>
            <function threadsafety="unspecified" name="clientBuildLocalE2EMessage" fullname="Endpoint::clientBuildLocalE2EMessage" href="endpoint.html#clientBuildLocalE2EMessage" access="protected" status="commendable" location="Endpoint.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Endpoint.h" lineno="266" virtual="non" meta="plain" const="false" static="false" overload="false" type="SYNTRO_EHEAD *" signature="clientBuildLocalE2EMessage(int clientPort, SYNTRO_UID * destUID, int destPort, int length)">
                <parameter left="int" right="" name="clientPort" default=""/>
                <parameter left="SYNTRO_UID *" right="" name="destUID" default=""/>
                <parameter left="int" right="" name="destPort" default=""/>
                <parameter left="int" right="" name="length" default=""/>
            </function>
            <function threadsafety="unspecified" name="clientBuildMessage" fullname="Endpoint::clientBuildMessage" href="endpoint.html#clientBuildMessage" access="protected" status="commendable" location="Endpoint.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Endpoint.h" lineno="265" virtual="non" meta="plain" const="false" static="false" overload="false" type="SYNTRO_EHEAD *" signature="clientBuildMessage(int servicePort, int length)">
                <parameter left="int" right="" name="servicePort" default=""/>
                <parameter left="int" right="" name="length" default=""/>
            </function>
            <function threadsafety="unspecified" name="clientClearToSend" fullname="Endpoint::clientClearToSend" href="endpoint.html#clientClearToSend" access="protected" status="commendable" location="Endpoint.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Endpoint.h" lineno="264" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="clientClearToSend(int servicePort)">
                <parameter left="int" right="" name="servicePort" default=""/>
            </function>
            <function threadsafety="unspecified" name="clientDisableService" fullname="Endpoint::clientDisableService" href="endpoint.html#clientDisableService" access="protected" status="commendable" location="Endpoint.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Endpoint.h" lineno="211" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="clientDisableService(int servicePort)">
                <parameter left="int" right="" name="servicePort" default=""/>
            </function>
            <function threadsafety="unspecified" name="clientEnableService" fullname="Endpoint::clientEnableService" href="endpoint.html#clientEnableService" access="protected" status="commendable" location="Endpoint.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Endpoint.h" lineno="207" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="clientEnableService(int servicePort)">
                <parameter left="int" right="" name="servicePort" default=""/>
            </function>
            <function threadsafety="unspecified" name="clientGetLastSendTime" fullname="Endpoint::clientGetLastSendTime" href="endpoint.html#clientGetLastSendTime" access="protected" status="commendable" location="Endpoint.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Endpoint.h" lineno="256" virtual="non" meta="plain" const="false" static="false" overload="false" type="qint64" signature="clientGetLastSendTime(int servicePort)">
                <parameter left="int" right="" name="servicePort" default=""/>
            </function>
            <function threadsafety="unspecified" name="clientGetRemoteServiceState" fullname="Endpoint::clientGetRemoteServiceState" href="endpoint.html#clientGetRemoteServiceState" access="protected" status="commendable" location="Endpoint.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Endpoint.h" lineno="244" virtual="non" meta="plain" const="false" static="false" overload="false" type="int" signature="clientGetRemoteServiceState(int servicePort)">
                <parameter left="int" right="" name="servicePort" default=""/>
            </function>
            <function threadsafety="unspecified" name="clientGetRemoteServiceUID" fullname="Endpoint::clientGetRemoteServiceUID" href="endpoint.html#clientGetRemoteServiceUID" access="protected" status="commendable" location="Endpoint.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Endpoint.h" lineno="248" virtual="non" meta="plain" const="false" static="false" overload="false" type="SYNTRO_UID *" signature="clientGetRemoteServiceUID(int servicePort)">
                <parameter left="int" right="" name="servicePort" default=""/>
            </function>
            <function threadsafety="unspecified" name="clientGetServiceData" fullname="Endpoint::clientGetServiceData" href="endpoint.html#clientGetServiceData" access="protected" status="commendable" location="Endpoint.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Endpoint.h" lineno="194" virtual="non" meta="plain" const="false" static="false" overload="false" type="int" signature="clientGetServiceData(int servicePort)">
                <parameter left="int" right="" name="servicePort" default=""/>
            </function>
            <function threadsafety="unspecified" name="clientGetServiceDataPointer" fullname="Endpoint::clientGetServiceDataPointer" href="endpoint.html#clientGetServiceDataPointer" access="protected" status="commendable" location="Endpoint.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Endpoint.h" lineno="203" virtual="non" meta="plain" const="false" static="false" overload="false" type="void *" signature="clientGetServiceDataPointer(int servicePort)">
                <parameter left="int" right="" name="servicePort" default=""/>
            </function>
            <function threadsafety="unspecified" name="clientGetServiceDestPort" fullname="Endpoint::clientGetServiceDestPort" href="endpoint.html#clientGetServiceDestPort" access="protected" status="commendable" location="Endpoint.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Endpoint.h" lineno="252" virtual="non" meta="plain" const="false" static="false" overload="false" type="int" signature="clientGetServiceDestPort(int servicePort)">
                <parameter left="int" right="" name="servicePort" default=""/>
            </function>
            <function threadsafety="unspecified" name="clientGetServicePath" fullname="Endpoint::clientGetServicePath" href="endpoint.html#clientGetServicePath" access="protected" status="commendable" location="Endpoint.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Endpoint.h" lineno="230" virtual="non" meta="plain" const="false" static="false" overload="false" type="QString" signature="clientGetServicePath(int servicePort)">
                <parameter left="int" right="" name="servicePort" default=""/>
            </function>
            <function threadsafety="unspecified" name="clientGetServiceType" fullname="Endpoint::clientGetServiceType" href="endpoint.html#clientGetServiceType" access="protected" status="commendable" location="Endpoint.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Endpoint.h" lineno="234" virtual="non" meta="plain" const="false" static="false" overload="false" type="int" signature="clientGetServiceType(int servicePort)">
                <parameter left="int" right="" name="servicePort" default=""/>
            </function>
            <function threadsafety="unspecified" name="clientIsConnected" fullname="Endpoint::clientIsConnected" href="endpoint.html#clientIsConnected" access="protected" status="commendable" location="Endpoint.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Endpoint.h" lineno="260" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="clientIsConnected()"/>
            <function threadsafety="unspecified" name="clientIsServiceActive" fullname="Endpoint::clientIsServiceActive" href="endpoint.html#clientIsServiceActive" access="protected" status="commendable" location="Endpoint.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Endpoint.h" lineno="226" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="clientIsServiceActive(int servicePort)">
                <parameter left="int" right="" name="servicePort" default=""/>
            </function>
            <function threadsafety="unspecified" name="clientIsServiceEnabled" fullname="Endpoint::clientIsServiceEnabled" href="endpoint.html#clientIsServiceEnabled" access="protected" status="commendable" location="Endpoint.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Endpoint.h" lineno="215" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="clientIsServiceEnabled(int servicePort)">
                <parameter left="int" right="" name="servicePort" default=""/>
            </function>
            <function threadsafety="unspecified" name="clientIsServiceLocal" fullname="Endpoint::clientIsServiceLocal" href="endpoint.html#clientIsServiceLocal" access="protected" status="commendable" location="Endpoint.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Endpoint.h" lineno="238" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="clientIsServiceLocal(int servicePort)">
                <parameter left="int" right="" name="servicePort" default=""/>
            </function>
            <function threadsafety="unspecified" name="clientLoadServices" fullname="Endpoint::clientLoadServices" href="endpoint.html#clientLoadServices" access="protected" status="commendable" location="Endpoint.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Endpoint.h" lineno="171" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="clientLoadServices(bool enabled, int * serviceCount, int * serviceStart)">
                <parameter left="bool" right="" name="enabled" default=""/>
                <parameter left="int *" right="" name="serviceCount" default=""/>
                <parameter left="int *" right="" name="serviceStart" default=""/>
            </function>
            <function threadsafety="unspecified" name="clientRemoveService" fullname="Endpoint::clientRemoveService" href="endpoint.html#clientRemoveService" access="protected" status="commendable" location="Endpoint.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Endpoint.h" lineno="219" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="clientRemoveService(int servicePort)">
                <parameter left="int" right="" name="servicePort" default=""/>
            </function>
            <function threadsafety="unspecified" name="clientSendMessage" fullname="Endpoint::clientSendMessage" href="endpoint.html#clientSendMessage" access="protected" status="commendable" location="Endpoint.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Endpoint.h" lineno="269" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="clientSendMessage(int servicePort, SYNTRO_EHEAD * message, int length, int priority)">
                <parameter left="int" right="" name="servicePort" default=""/>
                <parameter left="SYNTRO_EHEAD *" right="" name="message" default=""/>
                <parameter left="int" right="" name="length" default=""/>
                <parameter left="int" right="" name="priority" default="SYNTROLINK_LOWPRI"/>
            </function>
            <function threadsafety="unspecified" name="clientSendMulticastAck" fullname="Endpoint::clientSendMulticastAck" href="endpoint.html#clientSendMulticastAck" access="protected" status="commendable" location="Endpoint.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Endpoint.h" lineno="273" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="clientSendMulticastAck(int servicePort)">
                <parameter left="int" right="" name="servicePort" default=""/>
            </function>
            <function threadsafety="unspecified" name="clientSetServiceData" fullname="Endpoint::clientSetServiceData" href="endpoint.html#clientSetServiceData" access="protected" status="commendable" location="Endpoint.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Endpoint.h" lineno="188" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="clientSetServiceData(int servicePort, int value)">
                <parameter left="int" right="" name="servicePort" default=""/>
                <parameter left="int" right="" name="value" default=""/>
            </function>
            <function threadsafety="unspecified" name="clientSetServiceDataPointer" fullname="Endpoint::clientSetServiceDataPointer" href="endpoint.html#clientSetServiceDataPointer" access="protected" status="commendable" location="Endpoint.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Endpoint.h" lineno="198" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="clientSetServiceDataPointer(int servicePort, void * value)">
                <parameter left="int" right="" name="servicePort" default=""/>
                <parameter left="void *" right="" name="value" default=""/>
            </function>
            <function threadsafety="unspecified" name="requestDirectory" fullname="Endpoint::requestDirectory" href="endpoint.html#requestDirectory" access="public" status="commendable" location="Endpoint.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Endpoint.h" lineno="150" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="requestDirectory()"/>
            <function threadsafety="unspecified" name="setHeartbeatTimers" fullname="Endpoint::setHeartbeatTimers" href="endpoint.html#setHeartbeatTimers" access="public" status="commendable" location="Endpoint.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Endpoint.h" lineno="154" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setHeartbeatTimers(int interval, int timeout)">
                <parameter left="int" right="" name="interval" default=""/>
                <parameter left="int" right="" name="timeout" default=""/>
            </function>
            <function threadsafety="unspecified" name="endpointBackground" fullname="Endpoint::endpointBackground" href="endpoint.html#endpointBackground" access="private" status="internal" location="Endpoint.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Endpoint.h" lineno="510" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="endpointBackground()"/>
            <function threadsafety="unspecified" name="endpointSocketMessage" fullname="Endpoint::endpointSocketMessage" href="endpoint.html#endpointSocketMessage" access="private" status="internal" location="Endpoint.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Endpoint.h" lineno="511" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="endpointSocketMessage(SyntroThreadMsg * msg)">
                <parameter left="SyntroThreadMsg *" right="" name="msg" default=""/>
            </function>
            <function threadsafety="unspecified" name="serviceBackground" fullname="Endpoint::serviceBackground" href="endpoint.html#serviceBackground" access="private" status="internal" location="Endpoint.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Endpoint.h" lineno="512" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="serviceBackground()"/>
            <function threadsafety="unspecified" name="sendRemoteServiceLookup" fullname="Endpoint::sendRemoteServiceLookup" href="endpoint.html#sendRemoteServiceLookup" access="private" status="internal" location="Endpoint.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Endpoint.h" lineno="513" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="sendRemoteServiceLookup(SYNTRO_SERVICE_INFO * remoteService)">
                <parameter left="SYNTRO_SERVICE_INFO *" right="" name="remoteService" default=""/>
            </function>
            <function threadsafety="unspecified" name="processServiceActivate" fullname="Endpoint::processServiceActivate" href="endpoint.html#processServiceActivate" access="private" status="internal" location="Endpoint.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Endpoint.h" lineno="514" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="processServiceActivate(SYNTRO_SERVICE_ACTIVATE * serviceActivate)">
                <parameter left="SYNTRO_SERVICE_ACTIVATE *" right="" name="serviceActivate" default=""/>
            </function>
            <function threadsafety="unspecified" name="processLookupResponse" fullname="Endpoint::processLookupResponse" href="endpoint.html#processLookupResponse" access="private" status="internal" location="Endpoint.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Endpoint.h" lineno="515" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="processLookupResponse(SYNTRO_SERVICE_LOOKUP * serviceLookup)">
                <parameter left="SYNTRO_SERVICE_LOOKUP *" right="" name="serviceLookup" default=""/>
            </function>
            <function threadsafety="unspecified" name="processDirectoryResponse" fullname="Endpoint::processDirectoryResponse" href="endpoint.html#processDirectoryResponse" access="private" status="internal" location="Endpoint.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Endpoint.h" lineno="516" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="processDirectoryResponse(SYNTRO_DIRECTORY_RESPONSE * directoryResponse, int len)">
                <parameter left="SYNTRO_DIRECTORY_RESPONSE *" right="" name="directoryResponse" default=""/>
                <parameter left="int" right="" name="len" default=""/>
            </function>
            <function threadsafety="unspecified" name="processMulticast" fullname="Endpoint::processMulticast" href="endpoint.html#processMulticast" access="private" status="internal" location="Endpoint.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Endpoint.h" lineno="518" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="processMulticast(SYNTRO_EHEAD * message, int length, int destPort)">
                <parameter left="SYNTRO_EHEAD *" right="" name="message" default=""/>
                <parameter left="int" right="" name="length" default=""/>
                <parameter left="int" right="" name="destPort" default=""/>
            </function>
            <function threadsafety="unspecified" name="processMulticastAck" fullname="Endpoint::processMulticastAck" href="endpoint.html#processMulticastAck" access="private" status="internal" location="Endpoint.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Endpoint.h" lineno="519" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="processMulticastAck(SYNTRO_EHEAD * message, int length, int destPort)">
                <parameter left="SYNTRO_EHEAD *" right="" name="message" default=""/>
                <parameter left="int" right="" name="length" default=""/>
                <parameter left="int" right="" name="destPort" default=""/>
            </function>
            <function threadsafety="unspecified" name="processE2E" fullname="Endpoint::processE2E" href="endpoint.html#processE2E" access="private" status="internal" location="Endpoint.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Endpoint.h" lineno="520" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="processE2E(SYNTRO_EHEAD * message, int length, int destPort)">
                <parameter left="SYNTRO_EHEAD *" right="" name="message" default=""/>
                <parameter left="int" right="" name="length" default=""/>
                <parameter left="int" right="" name="destPort" default=""/>
            </function>
            <function threadsafety="unspecified" name="endpointConnected" fullname="Endpoint::endpointConnected" href="endpoint.html#endpointConnected" access="private" status="internal" location="Endpoint.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Endpoint.h" lineno="521" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="endpointConnected()"/>
            <function threadsafety="unspecified" name="endpointClosed" fullname="Endpoint::endpointClosed" href="endpoint.html#endpointClosed" access="private" status="internal" location="Endpoint.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Endpoint.h" lineno="522" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="endpointClosed()"/>
            <function threadsafety="unspecified" name="endpointHeartbeat" fullname="Endpoint::endpointHeartbeat" href="endpoint.html#endpointHeartbeat" access="private" status="internal" location="Endpoint.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Endpoint.h" lineno="523" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="endpointHeartbeat(SYNTRO_HEARTBEAT * heartbeat, int length)">
                <parameter left="SYNTRO_HEARTBEAT *" right="" name="heartbeat" default=""/>
                <parameter left="int" right="" name="length" default=""/>
            </function>
            <function threadsafety="unspecified" name="buildDE" fullname="Endpoint::buildDE" href="endpoint.html#buildDE" access="private" status="internal" location="Endpoint.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Endpoint.h" lineno="527" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="buildDE()"/>
            <function threadsafety="unspecified" name="forceDE" fullname="Endpoint::forceDE" href="endpoint.html#forceDE" access="private" status="internal" location="Endpoint.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Endpoint.h" lineno="528" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="forceDE()"/>
            <function threadsafety="unspecified" name="sentDE" fullname="Endpoint::sentDE" href="endpoint.html#sentDE" access="private" status="commendable" location="Endpoint.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Endpoint.h" lineno="529" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="sentDE()"/>
            <function threadsafety="unspecified" name="sendE2EAck" fullname="Endpoint::sendE2EAck" href="endpoint.html#sendE2EAck" access="private" status="internal" location="Endpoint.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Endpoint.h" lineno="531" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="sendE2EAck(SYNTRO_EHEAD * originalEhead)">
                <parameter left="SYNTRO_EHEAD *" right="" name="originalEhead" default=""/>
            </function>
            <function threadsafety="unspecified" name="syntroSendMessage" fullname="Endpoint::syntroSendMessage" href="endpoint.html#syntroSendMessage" access="private" status="internal" location="Endpoint.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Endpoint.h" lineno="533" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="syntroSendMessage(int cmd, SYNTRO_MESSAGE * syntroMessage, int len, int priority)">
                <parameter left="int" right="" name="cmd" default=""/>
                <parameter left="SYNTRO_MESSAGE *" right="" name="syntroMessage" default=""/>
                <parameter left="int" right="" name="len" default=""/>
                <parameter left="int" right="" name="priority" default=""/>
            </function>
            <function threadsafety="unspecified" name="linkCloseCleanup" fullname="Endpoint::linkCloseCleanup" href="endpoint.html#linkCloseCleanup" access="private" status="internal" location="Endpoint.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Endpoint.h" lineno="535" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="linkCloseCleanup()"/>
            <function threadsafety="unspecified" name="getHelloObject" fullname="Endpoint::getHelloObject" href="endpoint.html#getHelloObject" access="private" status="internal" location="Endpoint.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Endpoint.h" lineno="146" virtual="non" meta="plain" const="false" static="false" overload="false" type="Hello *" signature="getHelloObject()"/>
            <function threadsafety="unspecified" name="timerEvent" fullname="Endpoint::timerEvent" href="endpoint.html#timerEvent" access="private" status="internal" location="Endpoint.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Endpoint.h" lineno="159" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="timerEvent(QTimerEvent * event)">
                <parameter left="QTimerEvent *" right="" name="event" default=""/>
            </function>
            <function threadsafety="unspecified" name="sendMulticastAck" fullname="Endpoint::sendMulticastAck" href="endpoint.html#sendMulticastAck" access="private" status="internal" location="Endpoint.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Endpoint.h" lineno="530" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="sendMulticastAck(int servicePort, int seq)">
                <parameter left="int" right="" name="servicePort" default=""/>
                <parameter left="int" right="" name="seq" default=""/>
            </function>
            <function threadsafety="unspecified" name="initThread" fullname="Endpoint::initThread" href="endpoint.html#initThread" access="private" status="internal" location="Endpoint.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Endpoint.h" lineno="501" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="initThread()"/>
            <function threadsafety="unspecified" name="processMessage" fullname="Endpoint::processMessage" href="endpoint.html#processMessage" access="private" status="internal" location="Endpoint.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Endpoint.h" lineno="502" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="processMessage(SyntroThreadMsg * msg)">
                <parameter left="SyntroThreadMsg *" right="" name="msg" default=""/>
            </function>
            <function threadsafety="unspecified" name="syntroConnect" fullname="Endpoint::syntroConnect" href="endpoint.html#syntroConnect" access="private" status="internal" location="Endpoint.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Endpoint.h" lineno="505" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="syntroConnect()"/>
            <function threadsafety="unspecified" name="syntroClose" fullname="Endpoint::syntroClose" href="endpoint.html#syntroClose" access="private" status="internal" location="Endpoint.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Endpoint.h" lineno="506" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="syntroClose()"/>
            <function threadsafety="unspecified" name="processReceivedData" fullname="Endpoint::processReceivedData" href="endpoint.html#processReceivedData" access="private" status="internal" location="Endpoint.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Endpoint.h" lineno="507" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="processReceivedData()"/>
            <function threadsafety="unspecified" name="processReceivedDataDemux" fullname="Endpoint::processReceivedDataDemux" href="endpoint.html#processReceivedDataDemux" access="private" status="internal" location="Endpoint.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Endpoint.h" lineno="508" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="processReceivedDataDemux(int cmd, int len, SYNTRO_MESSAGE * syntroMessage)">
                <parameter left="int" right="" name="cmd" default=""/>
                <parameter left="int" right="" name="len" default=""/>
                <parameter left="SYNTRO_MESSAGE *" right="" name="syntroMessage" default=""/>
            </function>
            <function threadsafety="unspecified" name="serviceInit" fullname="Endpoint::serviceInit" href="endpoint.html#serviceInit" access="private" status="internal" location="Endpoint.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Endpoint.h" lineno="509" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="serviceInit()"/>
            <function threadsafety="unspecified" name="CFSSendKeepAlive" fullname="Endpoint::CFSSendKeepAlive" href="endpoint.html#CFSSendKeepAlive" access="private" status="internal" location="Endpoint.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Endpoint.h" lineno="555" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="CFSSendKeepAlive(int serviceEP, SYNTRO_CFS_FILE * scf)">
                <parameter left="int" right="" name="serviceEP" default=""/>
                <parameter left="SYNTRO_CFS_FILE *" right="" name="scf" default=""/>
            </function>
            <function threadsafety="unspecified" name="CFSTimeoutKeepAlive" fullname="Endpoint::CFSTimeoutKeepAlive" href="endpoint.html#CFSTimeoutKeepAlive" access="private" status="internal" location="Endpoint.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Endpoint.h" lineno="556" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="CFSTimeoutKeepAlive(int serviceEP, SYNTRO_CFS_FILE * scf)">
                <parameter left="int" right="" name="serviceEP" default=""/>
                <parameter left="SYNTRO_CFS_FILE *" right="" name="scf" default=""/>
            </function>
            <function threadsafety="unspecified" name="getLinkState" fullname="Endpoint::getLinkState" href="endpoint.html#getLinkState" access="public" status="commendable" location="Endpoint.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Endpoint.h" lineno="142" virtual="non" meta="plain" const="false" static="false" overload="false" type="QString" signature="getLinkState()"/>
            <function threadsafety="unspecified" name="~Endpoint" fullname="Endpoint::~Endpoint" href="endpoint.html#dtor.Endpoint" access="public" status="commendable" location="Endpoint.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Endpoint.h" lineno="138" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~Endpoint()"/>
            <variable threadsafety="unspecified" name="m_UID" fullname="Endpoint::m_UID" href="endpoint.html#m_UID-var" access="protected" status="commendable" location="Endpoint.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Endpoint.h" lineno="158" type="SYNTRO_UID" static="false"/>
            <variable threadsafety="unspecified" name="m_logTag" fullname="Endpoint::m_logTag" href="endpoint.html#m_logTag-var" access="protected" status="commendable" location="Endpoint.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Endpoint.h" lineno="446" type="QString" static="false"/>
        </class>
        <class threadsafety="unspecified" name="ChangeDetector" href="changedetector.html" access="private" status="internal" location="ChangeDetector.h" filepath="C:/Syntro/SyntroCore/SyntroLib/ChangeDetector.h" lineno="72" bases="">
            <function threadsafety="unspecified" name="ChangeDetector" fullname="ChangeDetector::ChangeDetector" href="changedetector.html#ChangeDetector" access="public" status="commendable" location="ChangeDetector.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/ChangeDetector.cpp" lineno="151" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="ChangeDetector()"/>
            <function threadsafety="unspecified" name="imageChanged" fullname="ChangeDetector::imageChanged" href="changedetector.html#imageChanged" access="public" status="commendable" location="ChangeDetector.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/ChangeDetector.cpp" lineno="198" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="imageChanged(const QByteArray &amp; newJpeg)">
                <parameter left="const QByteArray &amp;" right="" name="newJpeg" default=""/>
            </function>
            <function threadsafety="unspecified" name="makeJpegDataImage" fullname="ChangeDetector::makeJpegDataImage" href="changedetector.html#makeJpegDataImage" access="public" status="commendable" location="ChangeDetector.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/ChangeDetector.cpp" lineno="641" virtual="non" meta="plain" const="false" static="false" overload="false" type="QByteArray" signature="makeJpegDataImage()"/>
            <function threadsafety="unspecified" name="readJpgHeader" fullname="ChangeDetector::readJpgHeader" href="changedetector.html#readJpgHeader" access="private" status="commendable" location="ChangeDetector.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/ChangeDetector.cpp" lineno="242" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="readJpgHeader(unsigned char * jpeg, int jpegLength, int &amp; width, int &amp; height, int &amp; headSize)">
                <parameter left="unsigned char *" right="" name="jpeg" default=""/>
                <parameter left="int" right="" name="jpegLength" default=""/>
                <parameter left="int &amp;" right="" name="width" default=""/>
                <parameter left="int &amp;" right="" name="height" default=""/>
                <parameter left="int &amp;" right="" name="headSize" default=""/>
            </function>
            <function threadsafety="unspecified" name="decompressImage" fullname="ChangeDetector::decompressImage" href="changedetector.html#decompressImage" access="private" status="commendable" location="ChangeDetector.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/ChangeDetector.cpp" lineno="270" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="decompressImage(unsigned char * jpegData)">
                <parameter left="unsigned char *" right="" name="jpegData" default=""/>
            </function>
            <function threadsafety="unspecified" name="computeHuffmanTable" fullname="ChangeDetector::computeHuffmanTable" href="changedetector.html#computeHuffmanTable" access="private" status="commendable" location="ChangeDetector.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/ChangeDetector.cpp" lineno="724" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="computeHuffmanTable(HUFFTABLE * dtbl)">
                <parameter left="HUFFTABLE *" right="" name="dtbl" default=""/>
            </function>
            <function threadsafety="unspecified" name="decompressOneTile" fullname="ChangeDetector::decompressOneTile" href="changedetector.html#decompressOneTile" access="private" status="commendable" location="ChangeDetector.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/ChangeDetector.cpp" lineno="321" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="decompressOneTile()"/>
            <function threadsafety="unspecified" name="inverseDCT" fullname="ChangeDetector::inverseDCT" href="changedetector.html#inverseDCT" access="private" status="commendable" location="ChangeDetector.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/ChangeDetector.cpp" lineno="696" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="inverseDCT()"/>
            <function threadsafety="unspecified" name="readMarkers" fullname="ChangeDetector::readMarkers" href="changedetector.html#readMarkers" access="private" status="commendable" location="ChangeDetector.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/ChangeDetector.cpp" lineno="528" virtual="non" meta="plain" const="false" static="false" overload="false" type="int" signature="readMarkers(unsigned char * jpeg, int &amp; width, int &amp; height, int &amp; headSize)">
                <parameter left="unsigned char *" right="" name="jpeg" default=""/>
                <parameter left="int &amp;" right="" name="width" default=""/>
                <parameter left="int &amp;" right="" name="height" default=""/>
                <parameter left="int &amp;" right="" name="headSize" default=""/>
            </function>
            <function threadsafety="unspecified" name="readOneMarker" fullname="ChangeDetector::readOneMarker" href="changedetector.html#readOneMarker" access="private" status="commendable" location="ChangeDetector.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/ChangeDetector.cpp" lineno="356" virtual="non" meta="plain" const="false" static="false" overload="false" type="int" signature="readOneMarker()"/>
            <function threadsafety="unspecified" name="getSof" fullname="ChangeDetector::getSof" href="changedetector.html#getSof" access="private" status="commendable" location="ChangeDetector.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/ChangeDetector.cpp" lineno="375" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="getSof()"/>
            <function threadsafety="unspecified" name="setDeltaThreshold" fullname="ChangeDetector::setDeltaThreshold" href="changedetector.html#setDeltaThreshold" access="public" status="commendable" location="ChangeDetector.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/ChangeDetector.cpp" lineno="171" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setDeltaThreshold(int threshold)">
                <parameter left="int" right="" name="threshold" default=""/>
            </function>
            <function threadsafety="unspecified" name="setIntervalsToSkip" fullname="ChangeDetector::setIntervalsToSkip" href="changedetector.html#setIntervalsToSkip" access="public" status="commendable" location="ChangeDetector.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/ChangeDetector.cpp" lineno="181" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setIntervalsToSkip(int skipIntervals)">
                <parameter left="int" right="" name="skipIntervals" default=""/>
            </function>
            <function threadsafety="unspecified" name="setNoiseThreshold" fullname="ChangeDetector::setNoiseThreshold" href="changedetector.html#setNoiseThreshold" access="public" status="commendable" location="ChangeDetector.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/ChangeDetector.cpp" lineno="166" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setNoiseThreshold(int threshold)">
                <parameter left="int" right="" name="threshold" default=""/>
            </function>
            <function threadsafety="unspecified" name="setTilesToSkip" fullname="ChangeDetector::setTilesToSkip" href="changedetector.html#setTilesToSkip" access="public" status="commendable" location="ChangeDetector.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/ChangeDetector.cpp" lineno="176" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setTilesToSkip(int skipTiles)">
                <parameter left="int" right="" name="skipTiles" default=""/>
            </function>
            <function threadsafety="unspecified" name="setUninitialized" fullname="ChangeDetector::setUninitialized" href="changedetector.html#setUninitialized" access="public" status="commendable" location="ChangeDetector.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/ChangeDetector.cpp" lineno="186" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setUninitialized()"/>
            <function threadsafety="unspecified" name="~ChangeDetector" fullname="ChangeDetector::~ChangeDetector" href="changedetector.html#dtor.ChangeDetector" access="public" status="commendable" location="ChangeDetector.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/ChangeDetector.cpp" lineno="162" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~ChangeDetector()"/>
            <function threadsafety="unspecified" name="getDht" fullname="ChangeDetector::getDht" href="changedetector.html#getDht" access="private" status="commendable" location="ChangeDetector.h" filepath="C:/Syntro/SyntroCore/SyntroLib/ChangeDetector.h" lineno="97" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="getDht()"/>
            <function threadsafety="unspecified" name="getSos" fullname="ChangeDetector::getSos" href="changedetector.html#getSos" access="private" status="commendable" location="ChangeDetector.h" filepath="C:/Syntro/SyntroCore/SyntroLib/ChangeDetector.h" lineno="98" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="getSos()"/>
            <function threadsafety="unspecified" name="skipMarker" fullname="ChangeDetector::skipMarker" href="changedetector.html#skipMarker" access="private" status="commendable" location="ChangeDetector.h" filepath="C:/Syntro/SyntroCore/SyntroLib/ChangeDetector.h" lineno="99" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="skipMarker()"/>
            <function threadsafety="unspecified" name="getDri" fullname="ChangeDetector::getDri" href="changedetector.html#getDri" access="private" status="commendable" location="ChangeDetector.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/ChangeDetector.cpp" lineno="517" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="getDri()"/>
            <function threadsafety="unspecified" name="readRestartMarker" fullname="ChangeDetector::readRestartMarker" href="changedetector.html#readRestartMarker" access="private" status="commendable" location="ChangeDetector.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/ChangeDetector.cpp" lineno="615" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="readRestartMarker()"/>
            <function threadsafety="unspecified" name="huffmanDecode" fullname="ChangeDetector::huffmanDecode" href="changedetector.html#huffmanDecode" access="private" status="commendable" location="ChangeDetector.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/ChangeDetector.cpp" lineno="802" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="huffmanDecode(int blockIndex)">
                <parameter left="int" right="" name="blockIndex" default=""/>
            </function>
            <function threadsafety="unspecified" name="getCategory" fullname="ChangeDetector::getCategory" href="changedetector.html#getCategory" access="private" status="commendable" location="ChangeDetector.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/ChangeDetector.cpp" lineno="868" virtual="non" meta="plain" const="false" static="false" overload="false" type="int" signature="getCategory(HUFFTABLE * htbl)">
                <parameter left="HUFFTABLE *" right="" name="htbl" default=""/>
            </function>
            <function threadsafety="unspecified" name="skipToNextRestart" fullname="ChangeDetector::skipToNextRestart" href="changedetector.html#skipToNextRestart" access="private" status="commendable" location="ChangeDetector.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/ChangeDetector.cpp" lineno="893" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="skipToNextRestart()"/>
            <function threadsafety="unspecified" name="fillBitBuffer" fullname="ChangeDetector::fillBitBuffer" href="changedetector.html#fillBitBuffer" access="private" status="commendable" location="ChangeDetector.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/ChangeDetector.cpp" lineno="923" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="fillBitBuffer()"/>
            <function threadsafety="unspecified" name="getBits" fullname="ChangeDetector::getBits" href="changedetector.html#getBits" access="private" status="commendable" location="ChangeDetector.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/ChangeDetector.cpp" lineno="969" virtual="non" meta="plain" const="false" static="false" overload="false" type="int" signature="getBits(int nbits)">
                <parameter left="int" right="" name="nbits" default=""/>
            </function>
            <function threadsafety="unspecified" name="specialDecode" fullname="ChangeDetector::specialDecode" href="changedetector.html#specialDecode" access="private" status="commendable" location="ChangeDetector.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/ChangeDetector.cpp" lineno="982" virtual="non" meta="plain" const="false" static="false" overload="false" type="int" signature="specialDecode(HUFFTABLE * htbl, int minBits)">
                <parameter left="HUFFTABLE *" right="" name="htbl" default=""/>
                <parameter left="int" right="" name="minBits" default=""/>
            </function>
            <function threadsafety="unspecified" name="valueFromCategory" fullname="ChangeDetector::valueFromCategory" href="changedetector.html#valueFromCategory" access="private" status="commendable" location="ChangeDetector.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/ChangeDetector.cpp" lineno="1012" virtual="non" meta="plain" const="false" static="false" overload="false" type="int" signature="valueFromCategory(int cate, int offset)">
                <parameter left="int" right="" name="cate" default=""/>
                <parameter left="int" right="" name="offset" default=""/>
            </function>
            <function threadsafety="unspecified" name="imageConvert" fullname="ChangeDetector::imageConvert" href="changedetector.html#imageConvert" access="private" status="commendable" location="ChangeDetector.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/ChangeDetector.cpp" lineno="630" virtual="non" meta="plain" const="false" static="false" overload="false" type="unsigned char" signature="imageConvert(short val)">
                <parameter left="short" right="" name="val" default=""/>
            </function>
        </class>
        <class threadsafety="unspecified" name="DirectoryEntry" href="directoryentry.html" access="private" status="internal" location="DirectoryEntry.h" filepath="C:/Syntro/SyntroCore/SyntroLib/DirectoryEntry.h" lineno="27" bases="">
            <function threadsafety="unspecified" name="DirectoryEntry" fullname="DirectoryEntry::DirectoryEntry" href="directoryentry.html#DirectoryEntry" access="public" status="commendable" location="DirectoryEntry.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/DirectoryEntry.cpp" lineno="25" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="DirectoryEntry(QString dirLine)">
                <parameter left="QString" right="" name="dirLine" default="&quot;&quot;"/>
            </function>
            <function threadsafety="unspecified" name="appName" fullname="DirectoryEntry::appName" href="directoryentry.html#appName" access="public" status="commendable" location="DirectoryEntry.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/DirectoryEntry.cpp" lineno="57" virtual="non" meta="plain" const="false" static="false" overload="false" type="QString" signature="appName()"/>
            <function threadsafety="unspecified" name="componentType" fullname="DirectoryEntry::componentType" href="directoryentry.html#componentType" access="public" status="commendable" location="DirectoryEntry.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/DirectoryEntry.cpp" lineno="62" virtual="non" meta="plain" const="false" static="false" overload="false" type="QString" signature="componentType()"/>
            <function threadsafety="unspecified" name="e2eServices" fullname="DirectoryEntry::e2eServices" href="directoryentry.html#e2eServices" access="public" status="commendable" location="DirectoryEntry.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/DirectoryEntry.cpp" lineno="72" virtual="non" meta="plain" const="false" static="false" overload="false" type="QStringList" signature="e2eServices()"/>
            <function threadsafety="unspecified" name="isValid" fullname="DirectoryEntry::isValid" href="directoryentry.html#isValid" access="public" status="commendable" location="DirectoryEntry.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/DirectoryEntry.cpp" lineno="44" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="isValid()"/>
            <function threadsafety="unspecified" name="multicastServices" fullname="DirectoryEntry::multicastServices" href="directoryentry.html#multicastServices" access="public" status="commendable" location="DirectoryEntry.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/DirectoryEntry.cpp" lineno="67" virtual="non" meta="plain" const="false" static="false" overload="false" type="QStringList" signature="multicastServices()"/>
            <function threadsafety="unspecified" name="parseLine" fullname="DirectoryEntry::parseLine" href="directoryentry.html#parseLine" access="private" status="commendable" location="DirectoryEntry.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/DirectoryEntry.cpp" lineno="77" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="parseLine()"/>
            <function threadsafety="unspecified" name="element" fullname="DirectoryEntry::element" href="directoryentry.html#element" access="private" status="commendable" location="DirectoryEntry.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/DirectoryEntry.cpp" lineno="89" virtual="non" meta="plain" const="false" static="false" overload="false" type="QString" signature="element(QString name)">
                <parameter left="QString" right="" name="name" default=""/>
            </function>
            <function threadsafety="unspecified" name="elements" fullname="DirectoryEntry::elements" href="directoryentry.html#elements" access="private" status="commendable" location="DirectoryEntry.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/DirectoryEntry.cpp" lineno="105" virtual="non" meta="plain" const="false" static="false" overload="false" type="QStringList" signature="elements(QString name)">
                <parameter left="QString" right="" name="name" default=""/>
            </function>
            <function threadsafety="unspecified" name="setLine" fullname="DirectoryEntry::setLine" href="directoryentry.html#setLine" access="public" status="commendable" location="DirectoryEntry.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/DirectoryEntry.cpp" lineno="31" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setLine(QString dirLine)">
                <parameter left="QString" right="" name="dirLine" default=""/>
            </function>
            <function threadsafety="unspecified" name="uid" fullname="DirectoryEntry::uid" href="directoryentry.html#uid" access="public" status="commendable" location="DirectoryEntry.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/DirectoryEntry.cpp" lineno="52" virtual="non" meta="plain" const="false" static="false" overload="false" type="QString" signature="uid()"/>
        </class>
        <enum threadsafety="unspecified" name="SYNTRO_LOCAL_SERVICE_STATE" access="private" status="internal" location="Endpoint.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Endpoint.h" lineno="73">
            <value name="SYNTRO_LOCAL_SERVICE_STATE_INACTIVE" value="0"/>
            <value name="SYNTRO_LOCAL_SERVICE_STATE_ACTIVE" value="1"/>
        </enum>
        <enum threadsafety="unspecified" name="SYNTRO_REMOTE_SERVICE_STATE" access="private" status="internal" location="Endpoint.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Endpoint.h" lineno="81">
            <value name="SYNTRO_REMOTE_SERVICE_STATE_NOTINUSE" value="0"/>
            <value name="SYNTRO_REMOTE_SERVICE_STATE_LOOK" value="1"/>
            <value name="SYNTRO_REMOTE_SERVICE_STATE_LOOKING" value="2"/>
            <value name="SYNTRO_REMOTE_SERVICE_STATE_REGISTERED" value="3"/>
            <value name="SYNTRO_REMOTE_SERVICE_STATE_REMOVE" value="4"/>
            <value name="SYNTRO_REMOTE_SERVICE_STATE_REMOVING" value="5"/>
        </enum>
        <class threadsafety="unspecified" name="Hello" href="hello.html" access="private" status="internal" location="Hello.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Hello.h" lineno="41" bases="SyntroThread">
            <function threadsafety="unspecified" name="Hello" fullname="Hello::Hello" href="hello.html#Hello" access="public" status="commendable" location="Hello.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/Hello.cpp" lineno="27" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="Hello(SyntroComponentData * data, const QString &amp; logTag)">
                <parameter left="SyntroComponentData *" right="" name="data" default=""/>
                <parameter left="const QString &amp;" right="" name="logTag" default=""/>
            </function>
            <function threadsafety="unspecified" name="copyHelloEntry" fullname="Hello::copyHelloEntry" href="hello.html#copyHelloEntry" access="public" status="commendable" location="Hello.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/Hello.cpp" lineno="107" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="copyHelloEntry(int index, HELLOENTRY * dest)">
                <parameter left="int" right="" name="index" default=""/>
                <parameter left="HELLOENTRY *" right="" name="dest" default=""/>
            </function>
            <function threadsafety="unspecified" name="deleteEntry" fullname="Hello::deleteEntry" href="hello.html#deleteEntry" access="protected" status="commendable" location="Hello.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/Hello.cpp" lineno="332" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="deleteEntry(HELLOENTRY * pH)">
                <parameter left="HELLOENTRY *" right="" name="pH" default=""/>
            </function>
            <function threadsafety="unspecified" name="findBestControl" fullname="Hello::findBestControl" href="hello.html#findBestControl" access="public" status="commendable" location="Hello.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/Hello.cpp" lineno="169" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="findBestControl(HELLOENTRY * foundHelloEntry)">
                <parameter left="HELLOENTRY *" right="" name="foundHelloEntry" default=""/>
            </function>
            <function threadsafety="unspecified" name="findComponent" fullname="Hello::findComponent" href="hello.html#findComponent" access="public" status="commendable" location="Hello.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/Hello.cpp" lineno="120" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="findComponent(HELLOENTRY * foundHelloEntry, SYNTRO_UID * UID)">
                <parameter left="HELLOENTRY *" right="" name="foundHelloEntry" default=""/>
                <parameter left="SYNTRO_UID *" right="" name="UID" default=""/>
            </function>
            <function threadsafety="unspecified" name="findComponent" fullname="Hello::findComponent" href="hello.html#findComponent-2" access="public" status="commendable" location="Hello.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/Hello.cpp" lineno="141" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="bool" signature="findComponent(HELLOENTRY * foundHelloEntry, char * appName, char * componentType)">
                <parameter left="HELLOENTRY *" right="" name="foundHelloEntry" default=""/>
                <parameter left="char *" right="" name="appName" default=""/>
                <parameter left="char *" right="" name="componentType" default=""/>
            </function>
            <function threadsafety="unspecified" name="getHelloEntry" fullname="Hello::getHelloEntry" href="hello.html#getHelloEntry" access="public" status="commendable" location="Hello.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/Hello.cpp" lineno="79" virtual="non" meta="plain" const="false" static="false" overload="false" type="char *" signature="getHelloEntry(int index)">
                <parameter left="int" right="" name="index" default=""/>
            </function>
            <function threadsafety="unspecified" name="initThread" fullname="Hello::initThread" href="hello.html#initThread" access="public" status="commendable" location="Hello.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/Hello.cpp" lineno="50" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="initThread()"/>
            <function threadsafety="unspecified" name="matchHello" fullname="Hello::matchHello" href="hello.html#matchHello" access="protected" status="commendable" location="Hello.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/Hello.cpp" lineno="276" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="matchHello(HELLO * a, HELLO * b)">
                <parameter left="HELLO *" right="" name="a" default=""/>
                <parameter left="HELLO *" right="" name="b" default=""/>
            </function>
            <function threadsafety="unspecified" name="processHello" fullname="Hello::processHello" href="hello.html#processHello" access="protected" status="commendable" location="Hello.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/Hello.cpp" lineno="200" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="processHello()"/>
            <function threadsafety="unspecified" name="processMessage" fullname="Hello::processMessage" href="hello.html#processMessage" access="public" status="commendable" location="Hello.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/Hello.cpp" lineno="340" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="processMessage(SyntroThreadMsg * msg)">
                <parameter left="SyntroThreadMsg *" right="" name="msg" default=""/>
            </function>
            <function threadsafety="unspecified" name="processTimers" fullname="Hello::processTimers" href="hello.html#processTimers" access="protected" status="commendable" location="Hello.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/Hello.cpp" lineno="282" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="processTimers()"/>
            <function threadsafety="unspecified" name="sendHelloBeacon" fullname="Hello::sendHelloBeacon" href="hello.html#sendHelloBeacon" access="public" status="commendable" location="Hello.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/Hello.cpp" lineno="314" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="sendHelloBeacon()"/>
            <function threadsafety="unspecified" name="sendHelloBeaconResponse" fullname="Hello::sendHelloBeaconResponse" href="hello.html#sendHelloBeaconResponse" access="public" status="commendable" location="Hello.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/Hello.cpp" lineno="322" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="sendHelloBeaconResponse(HELLO * hello)">
                <parameter left="HELLO *" right="" name="hello" default=""/>
            </function>
            <function threadsafety="unspecified" name="timerEvent" fullname="Hello::timerEvent" href="hello.html#timerEvent" access="protected" status="commendable" location="Hello.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/Hello.cpp" lineno="353" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="timerEvent(QTimerEvent * event)">
                <parameter left="QTimerEvent *" right="" name="event" default=""/>
            </function>
            <function threadsafety="unspecified" name="~Hello" fullname="Hello::~Hello" href="hello.html#dtor.Hello" access="public" status="commendable" location="Hello.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/Hello.cpp" lineno="42" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~Hello()"/>
            <function threadsafety="unspecified" name="helloDisplayEvent" fullname="Hello::helloDisplayEvent" href="hello.html#helloDisplayEvent" access="public" status="commendable" location="Hello.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Hello.h" lineno="78" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="helloDisplayEvent(Hello * hello)">
                <parameter left="Hello *" right="" name="hello" default=""/>
            </function>
            <variable threadsafety="unspecified" name="m_IpAddr" fullname="Hello::m_IpAddr" href="hello.html#m_IpAddr-var" access="protected" status="commendable" location="Hello.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Hello.h" lineno="88" type="char[SYNTRO_MAX_NONTAG]" static="false"/>
            <variable threadsafety="unspecified" name="m_RXHello" fullname="Hello::m_RXHello" href="hello.html#m_RXHello-var" access="protected" status="commendable" location="Hello.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Hello.h" lineno="87" type="HELLO" static="false"/>
            <variable threadsafety="unspecified" name="m_componentData" fullname="Hello::m_componentData" href="hello.html#m_componentData-var" access="protected" status="commendable" location="Hello.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Hello.h" lineno="91" type="SyntroComponentData *" static="false"/>
            <variable threadsafety="unspecified" name="m_control" fullname="Hello::m_control" href="hello.html#m_control-var" access="protected" status="commendable" location="Hello.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Hello.h" lineno="92" type="bool" static="false"/>
            <variable threadsafety="unspecified" name="m_controlTimer" fullname="Hello::m_controlTimer" href="hello.html#m_controlTimer-var" access="protected" status="commendable" location="Hello.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Hello.h" lineno="93" type="qint64" static="false"/>
            <variable threadsafety="unspecified" name="m_helloArray" fullname="Hello::m_helloArray" href="hello.html#m_helloArray-var" access="public" status="commendable" location="Hello.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Hello.h" lineno="67" type="HELLOENTRY[SYNTRO_MAX_CONNECTEDCOMPONENTS]" static="false"/>
            <variable threadsafety="unspecified" name="m_helloSocket" fullname="Hello::m_helloSocket" href="hello.html#m_helloSocket-var" access="protected" status="commendable" location="Hello.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Hello.h" lineno="90" type="SyntroSocket *" static="false"/>
            <variable threadsafety="unspecified" name="m_lock" fullname="Hello::m_lock" href="hello.html#m_lock-var" access="public" status="commendable" location="Hello.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Hello.h" lineno="68" type="QMutex" static="false"/>
            <variable threadsafety="unspecified" name="m_parentThread" fullname="Hello::m_parentThread" href="hello.html#m_parentThread-var" access="public" status="commendable" location="Hello.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Hello.h" lineno="57" type="SyntroThread *" static="false"/>
            <variable threadsafety="unspecified" name="m_port" fullname="Hello::m_port" href="hello.html#m_port-var" access="protected" status="commendable" location="Hello.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Hello.h" lineno="89" type="unsigned int" static="false"/>
            <variable threadsafety="unspecified" name="m_priority" fullname="Hello::m_priority" href="hello.html#m_priority-var" access="public" status="commendable" location="Hello.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Hello.h" lineno="61" type="int" static="false"/>
            <variable threadsafety="unspecified" name="m_socketFlags" fullname="Hello::m_socketFlags" href="hello.html#m_socketFlags-var" access="public" status="commendable" location="Hello.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Hello.h" lineno="59" type="int" static="false"/>
        </class>
        <class threadsafety="unspecified" name="LogMessage" href="logmessage.html" access="private" status="internal" location="Logger.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Logger.h" lineno="40" bases="">
            <function threadsafety="unspecified" name="LogMessage" fullname="LogMessage::LogMessage" href="logmessage.html#LogMessage" access="public" status="commendable" location="Logger.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/Logger.cpp" lineno="279" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="LogMessage(QString type, QString &amp; msg)">
                <parameter left="QString" right="" name="type" default=""/>
                <parameter left="QString &amp;" right="" name="msg" default=""/>
            </function>
            <function threadsafety="unspecified" name="LogMessage" fullname="LogMessage::LogMessage" href="logmessage.html#LogMessage-2" access="public" status="commendable" location="Logger.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/Logger.cpp" lineno="287" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="LogMessage(const LogMessage &amp; rhs)">
                <parameter left="const LogMessage &amp;" right="" name="rhs" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator=" fullname="LogMessage::operator=" href="logmessage.html#operator=" access="public" status="commendable" location="Logger.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/Logger.cpp" lineno="294" virtual="non" meta="plain" const="false" static="false" overload="false" type="LogMessage &amp;" signature="operator=(const LogMessage &amp; rhs)">
                <parameter left="const LogMessage &amp;" right="" name="rhs" default=""/>
            </function>
            <variable threadsafety="unspecified" name="m_msg" fullname="LogMessage::m_msg" href="logmessage.html#m_msg-var" access="public" status="commendable" location="Logger.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Logger.h" lineno="48" type="QString" static="false"/>
            <variable threadsafety="unspecified" name="m_timeStamp" fullname="LogMessage::m_timeStamp" href="logmessage.html#m_timeStamp-var" access="public" status="commendable" location="Logger.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Logger.h" lineno="49" type="QString" static="false"/>
            <variable threadsafety="unspecified" name="m_type" fullname="LogMessage::m_type" href="logmessage.html#m_type-var" access="public" status="commendable" location="Logger.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Logger.h" lineno="47" type="QString" static="false"/>
        </class>
        <class threadsafety="unspecified" name="Logger" href="logger.html" access="private" status="internal" location="Logger.h" filepath="C:/Syntro/SyntroCore/SyntroLib/Logger.h" lineno="52" bases="Endpoint">
            <function threadsafety="unspecified" name="Logger" fullname="Logger::Logger" href="logger.html#Logger" access="public" status="commendable" location="Logger.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/Logger.cpp" lineno="30" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="Logger(const QString &amp; appName, int level, bool diskLog, bool netLog, int logKeep, int maxSize)">
                <parameter left="const QString &amp;" right="" name="appName" default=""/>
                <parameter left="int" right="" name="level" default=""/>
                <parameter left="bool" right="" name="diskLog" default=""/>
                <parameter left="bool" right="" name="netLog" default=""/>
                <parameter left="int" right="" name="logKeep" default=""/>
                <parameter left="int" right="" name="maxSize" default=""/>
            </function>
            <function threadsafety="unspecified" name="appClientBackground" fullname="Logger::appClientBackground" href="logger.html#appClientBackground" access="protected" status="commendable" location="Logger.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/Logger.cpp" lineno="77" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="appClientBackground()"/>
            <function threadsafety="unspecified" name="appClientInit" fullname="Logger::appClientInit" href="logger.html#appClientInit" access="protected" status="commendable" location="Logger.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/Logger.cpp" lineno="69" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="appClientInit()"/>
            <function threadsafety="unspecified" name="diskOpen" fullname="Logger::diskOpen" href="logger.html#diskOpen" access="private" status="commendable" location="Logger.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/Logger.cpp" lineno="161" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="diskOpen()"/>
            <function threadsafety="unspecified" name="diskFlush" fullname="Logger::diskFlush" href="logger.html#diskFlush" access="private" status="commendable" location="Logger.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/Logger.cpp" lineno="233" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="diskFlush()"/>
            <function threadsafety="unspecified" name="logWrite" fullname="Logger::logWrite" href="logger.html#logWrite" access="public" status="commendable" location="Logger.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/Logger.cpp" lineno="137" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="logWrite(QString level, QString msg)">
                <parameter left="QString" right="" name="level" default=""/>
                <parameter left="QString" right="" name="msg" default=""/>
            </function>
            <function threadsafety="unspecified" name="rotateLogs" fullname="Logger::rotateLogs" href="logger.html#rotateLogs" access="private" status="commendable" location="Logger.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/Logger.cpp" lineno="188" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="rotateLogs(QString logName)">
                <parameter left="QString" right="" name="logName" default=""/>
            </function>
            <function threadsafety="unspecified" name="streamQueue" fullname="Logger::streamQueue" href="logger.html#streamQueue" access="public" status="commendable" location="Logger.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/Logger.cpp" lineno="264" virtual="non" meta="plain" const="false" static="false" overload="false" type="QQueue&lt;LogMessage&gt; *" signature="streamQueue()"/>
            <function threadsafety="unspecified" name="~Logger" fullname="Logger::~Logger" href="logger.html#dtor.Logger" access="public" status="commendable" location="Logger.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/Logger.cpp" lineno="63" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~Logger()"/>
        </class>
        <variable threadsafety="unspecified" name="SYNTRO_RECORDHEADER_PARAM_NOOP" access="private" status="internal" location="SyntroAVDefs.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroAV/SyntroAVDefs.h" lineno="29" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="SYNTRO_RECORDHEADER_PARAM_REFRESH" access="private" status="internal" location="SyntroAVDefs.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroAV/SyntroAVDefs.h" lineno="30" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="SYNTRO_RECORDHEADER_PARAM_NORMAL" access="private" status="internal" location="SyntroAVDefs.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroAV/SyntroAVDefs.h" lineno="31" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="SYNTRO_RECORDHEADER_PARAM_PREROLL" access="private" status="internal" location="SyntroAVDefs.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroAV/SyntroAVDefs.h" lineno="32" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="SYNTRO_RECORDHEADER_PARAM_POSTROLL" access="private" status="internal" location="SyntroAVDefs.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroAV/SyntroAVDefs.h" lineno="33" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="SYNTRO_RECORD_TYPE_AVMUX_UNKNOWN" access="private" status="internal" location="SyntroAVDefs.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroAV/SyntroAVDefs.h" lineno="40" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="SYNTRO_RECORD_TYPE_AVMUX_MJPPCM" access="private" status="internal" location="SyntroAVDefs.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroAV/SyntroAVDefs.h" lineno="41" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="SYNTRO_RECORD_TYPE_AVMUX_MP4" access="private" status="internal" location="SyntroAVDefs.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroAV/SyntroAVDefs.h" lineno="42" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="SYNTRO_RECORD_TYPE_AVMUX_OGG" access="private" status="internal" location="SyntroAVDefs.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroAV/SyntroAVDefs.h" lineno="43" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="SYNTRO_RECORD_TYPE_AVMUX_WEBM" access="private" status="internal" location="SyntroAVDefs.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroAV/SyntroAVDefs.h" lineno="44" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="SYNTRO_RECORD_TYPE_AVMUX_RTP" access="private" status="internal" location="SyntroAVDefs.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroAV/SyntroAVDefs.h" lineno="45" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="SYNTRO_RECORD_TYPE_AVMUX_RTPCAPS" access="private" status="internal" location="SyntroAVDefs.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroAV/SyntroAVDefs.h" lineno="46" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="SYNTRO_RECORD_TYPE_AVMUX_END" access="private" status="internal" location="SyntroAVDefs.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroAV/SyntroAVDefs.h" lineno="51" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="SYNTRO_RECORD_TYPE_VIDEO_UNKNOWN" access="private" status="internal" location="SyntroAVDefs.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroAV/SyntroAVDefs.h" lineno="58" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="SYNTRO_RECORD_TYPE_VIDEO_MJPEG" access="private" status="internal" location="SyntroAVDefs.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroAV/SyntroAVDefs.h" lineno="59" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="SYNTRO_RECORD_TYPE_VIDEO_MPEG1" access="private" status="internal" location="SyntroAVDefs.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroAV/SyntroAVDefs.h" lineno="60" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="SYNTRO_RECORD_TYPE_VIDEO_MPEG2" access="private" status="internal" location="SyntroAVDefs.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroAV/SyntroAVDefs.h" lineno="61" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="SYNTRO_RECORD_TYPE_VIDEO_H264" access="private" status="internal" location="SyntroAVDefs.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroAV/SyntroAVDefs.h" lineno="62" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="SYNTRO_RECORD_TYPE_VIDEO_VP8" access="private" status="internal" location="SyntroAVDefs.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroAV/SyntroAVDefs.h" lineno="63" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="SYNTRO_RECORD_TYPE_VIDEO_THEORA" access="private" status="internal" location="SyntroAVDefs.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroAV/SyntroAVDefs.h" lineno="64" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="SYNTRO_RECORD_TYPE_VIDEO_RTPMPEG4" access="private" status="internal" location="SyntroAVDefs.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroAV/SyntroAVDefs.h" lineno="65" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="SYNTRO_RECORD_TYPE_VIDEO_RTPCAPS" access="private" status="internal" location="SyntroAVDefs.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroAV/SyntroAVDefs.h" lineno="66" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="SYNTRO_RECORD_TYPE_VIDEO_END" access="private" status="internal" location="SyntroAVDefs.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroAV/SyntroAVDefs.h" lineno="71" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="SYNTRO_RECORD_TYPE_AUDIO_UNKNOWN" access="private" status="internal" location="SyntroAVDefs.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroAV/SyntroAVDefs.h" lineno="77" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="SYNTRO_RECORD_TYPE_AUDIO_PCM" access="private" status="internal" location="SyntroAVDefs.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroAV/SyntroAVDefs.h" lineno="78" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="SYNTRO_RECORD_TYPE_AUDIO_MP3" access="private" status="internal" location="SyntroAVDefs.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroAV/SyntroAVDefs.h" lineno="79" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="SYNTRO_RECORD_TYPE_AUDIO_AC3" access="private" status="internal" location="SyntroAVDefs.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroAV/SyntroAVDefs.h" lineno="80" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="SYNTRO_RECORD_TYPE_AUDIO_AAC" access="private" status="internal" location="SyntroAVDefs.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroAV/SyntroAVDefs.h" lineno="81" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="SYNTRO_RECORD_TYPE_AUDIO_VORBIS" access="private" status="internal" location="SyntroAVDefs.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroAV/SyntroAVDefs.h" lineno="82" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="SYNTRO_RECORD_TYPE_AUDIO_RTPAAC" access="private" status="internal" location="SyntroAVDefs.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroAV/SyntroAVDefs.h" lineno="83" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="SYNTRO_RECORD_TYPE_AUDIO_RTPCAPS" access="private" status="internal" location="SyntroAVDefs.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroAV/SyntroAVDefs.h" lineno="84" type="const int" static="true"/>
        <variable threadsafety="unspecified" name="SYNTRO_RECORD_TYPE_AUDIO_END" access="private" status="internal" location="SyntroAVDefs.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroAV/SyntroAVDefs.h" lineno="89" type="const int" static="true"/>
        <class threadsafety="unspecified" name="SyntroComponentData" href="syntrocomponentdata.html" access="private" status="internal" location="SyntroComponentData.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroComponentData.h" lineno="32" bases="">
            <function threadsafety="unspecified" name="DEAddValue" fullname="SyntroComponentData::DEAddValue" href="syntrocomponentdata.html#DEAddValue" access="public" status="commendable" location="SyntroComponentData.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroComponentData.cpp" lineno="88" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="DEAddValue(QString tag, QString value)">
                <parameter left="QString" right="" name="tag" default=""/>
                <parameter left="QString" right="" name="value" default=""/>
            </function>
            <function threadsafety="unspecified" name="DEComplete" fullname="SyntroComponentData::DEComplete" href="syntrocomponentdata.html#DEComplete" access="public" status="commendable" location="SyntroComponentData.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroComponentData.cpp" lineno="83" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="DEComplete()"/>
            <function threadsafety="unspecified" name="DESetup" fullname="SyntroComponentData::DESetup" href="syntrocomponentdata.html#DESetup" access="public" status="commendable" location="SyntroComponentData.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroComponentData.cpp" lineno="74" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="DESetup()"/>
            <function threadsafety="unspecified" name="SyntroComponentData" fullname="SyntroComponentData::SyntroComponentData" href="syntrocomponentdata.html#SyntroComponentData" access="public" status="commendable" location="SyntroComponentData.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroComponentData.cpp" lineno="25" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="SyntroComponentData()"/>
            <function threadsafety="unspecified" name="createHelloSocket" fullname="SyntroComponentData::createHelloSocket" href="syntrocomponentdata.html#createHelloSocket" access="private" status="commendable" location="SyntroComponentData.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroComponentData.cpp" lineno="103" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="createHelloSocket()"/>
            <function threadsafety="unspecified" name="init" fullname="SyntroComponentData::init" href="syntrocomponentdata.html#init" access="public" status="commendable" location="SyntroComponentData.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroComponentData.cpp" lineno="35" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="init(const char * compType, int hbInterval, int priority)">
                <parameter left="const char *" right="" name="compType" default=""/>
                <parameter left="int" right="" name="hbInterval" default=""/>
                <parameter left="int" right="" name="priority" default="0"/>
            </function>
            <function threadsafety="unspecified" name="~SyntroComponentData" fullname="SyntroComponentData::~SyntroComponentData" href="syntrocomponentdata.html#dtor.SyntroComponentData" access="public" status="commendable" location="SyntroComponentData.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroComponentData.cpp" lineno="31" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~SyntroComponentData()"/>
            <function threadsafety="unspecified" name="getMyComponentType" fullname="SyntroComponentData::getMyComponentType" href="syntrocomponentdata.html#getMyComponentType" access="public" status="commendable" location="SyntroComponentData.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroComponentData.h" lineno="63" virtual="non" meta="plain" const="false" static="false" overload="false" type="const char *" signature="getMyComponentType()"/>
            <function threadsafety="unspecified" name="getMyDE" fullname="SyntroComponentData::getMyDE" href="syntrocomponentdata.html#getMyDE" access="public" status="commendable" location="SyntroComponentData.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroComponentData.h" lineno="43" virtual="non" meta="plain" const="false" static="false" overload="false" type="const char *" signature="getMyDE()"/>
            <function threadsafety="unspecified" name="getMyHeartbeat" fullname="SyntroComponentData::getMyHeartbeat" href="syntrocomponentdata.html#getMyHeartbeat" access="public" status="commendable" location="SyntroComponentData.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroComponentData.h" lineno="59" virtual="non" meta="plain" const="false" static="false" overload="false" type="SYNTRO_HEARTBEAT" signature="getMyHeartbeat()"/>
            <function threadsafety="unspecified" name="getMyHelloSocket" fullname="SyntroComponentData::getMyHelloSocket" href="syntrocomponentdata.html#getMyHelloSocket" access="public" status="commendable" location="SyntroComponentData.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroComponentData.h" lineno="75" virtual="non" meta="plain" const="false" static="false" overload="false" type="SyntroSocket *" signature="getMyHelloSocket()"/>
            <function threadsafety="unspecified" name="getMyInstance" fullname="SyntroComponentData::getMyInstance" href="syntrocomponentdata.html#getMyInstance" access="public" status="commendable" location="SyntroComponentData.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroComponentData.h" lineno="71" virtual="non" meta="plain" const="false" static="false" overload="false" type="unsigned char" signature="getMyInstance()"/>
            <function threadsafety="unspecified" name="getMyUID" fullname="SyntroComponentData::getMyUID" href="syntrocomponentdata.html#getMyUID" access="public" status="commendable" location="SyntroComponentData.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroComponentData.h" lineno="67" virtual="non" meta="plain" const="false" static="false" overload="false" type="SYNTRO_UID" signature="getMyUID()"/>
        </class>
        <typedef threadsafety="unspecified" name="SYNTRO_IPADDR" access="private" status="internal" location="SyntroDefs.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroDefs.h" lineno="84"/>
        <typedef threadsafety="unspecified" name="SYNTRO_UC2" access="private" status="internal" location="SyntroDefs.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroDefs.h" lineno="85"/>
        <typedef threadsafety="unspecified" name="SYNTRO_UC4" access="private" status="internal" location="SyntroDefs.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroDefs.h" lineno="86"/>
        <typedef threadsafety="unspecified" name="SYNTRO_UC8" access="private" status="internal" location="SyntroDefs.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroDefs.h" lineno="94"/>
        <typedef threadsafety="unspecified" name="SYNTRO_MACADDR" access="private" status="internal" location="SyntroDefs.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroDefs.h" lineno="96"/>
        <typedef threadsafety="unspecified" name="SYNTRO_MACADDRSTR" access="private" status="internal" location="SyntroDefs.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroDefs.h" lineno="103"/>
        <typedef threadsafety="unspecified" name="SYNTRO_UIDSTR" access="private" status="internal" location="SyntroDefs.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroDefs.h" lineno="153"/>
        <typedef threadsafety="unspecified" name="SYNTRO_SERVNAME" access="private" status="internal" location="SyntroDefs.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroDefs.h" lineno="154"/>
        <typedef threadsafety="unspecified" name="SYNTRO_REGIONNAME" access="private" status="internal" location="SyntroDefs.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroDefs.h" lineno="155"/>
        <typedef threadsafety="unspecified" name="SYNTRO_APPNAME" access="private" status="internal" location="SyntroDefs.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroDefs.h" lineno="156"/>
        <typedef threadsafety="unspecified" name="SYNTRO_APPTYPE" access="private" status="internal" location="SyntroDefs.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroDefs.h" lineno="157"/>
        <typedef threadsafety="unspecified" name="SYNTRO_COMPTYPE" access="private" status="internal" location="SyntroDefs.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroDefs.h" lineno="159"/>
        <typedef threadsafety="unspecified" name="SYNTRO_SERVPATH" access="private" status="internal" location="SyntroDefs.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroDefs.h" lineno="297"/>
        <class threadsafety="unspecified" name="SyntroMessageWrapper" href="syntromessagewrapper.html" access="private" status="internal" location="SyntroLink.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroLink.h" lineno="26" bases="">
            <function threadsafety="unspecified" name="SyntroMessageWrapper" fullname="SyntroMessageWrapper::SyntroMessageWrapper" href="syntromessagewrapper.html#SyntroMessageWrapper" access="public" status="commendable" location="SyntroLink.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroLink.h" lineno="28" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="SyntroMessageWrapper(void )">
                <parameter left="void" right="" name="" default=""/>
            </function>
            <function threadsafety="unspecified" name="~SyntroMessageWrapper" fullname="SyntroMessageWrapper::~SyntroMessageWrapper" href="syntromessagewrapper.html#dtor.SyntroMessageWrapper" access="public" status="commendable" location="SyntroLink.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroLink.h" lineno="29" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~SyntroMessageWrapper(void )">
                <parameter left="void" right="" name="" default=""/>
            </function>
            <variable threadsafety="unspecified" name="m_bytesLeft" fullname="SyntroMessageWrapper::m_bytesLeft" href="syntromessagewrapper.html#m_bytesLeft-var" access="public" status="commendable" location="SyntroLink.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroLink.h" lineno="34" type="int" static="false"/>
            <variable threadsafety="unspecified" name="m_cmd" fullname="SyntroMessageWrapper::m_cmd" href="syntromessagewrapper.html#m_cmd-var" access="public" status="commendable" location="SyntroLink.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroLink.h" lineno="39" type="int" static="false"/>
            <variable threadsafety="unspecified" name="m_len" fullname="SyntroMessageWrapper::m_len" href="syntromessagewrapper.html#m_len-var" access="public" status="commendable" location="SyntroLink.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroLink.h" lineno="32" type="int" static="false"/>
            <variable threadsafety="unspecified" name="m_msg" fullname="SyntroMessageWrapper::m_msg" href="syntromessagewrapper.html#m_msg-var" access="public" status="commendable" location="SyntroLink.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroLink.h" lineno="31" type="SYNTRO_MESSAGE *" static="false"/>
            <variable threadsafety="unspecified" name="m_next" fullname="SyntroMessageWrapper::m_next" href="syntromessagewrapper.html#m_next-var" access="public" status="commendable" location="SyntroLink.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroLink.h" lineno="33" type="SyntroMessageWrapper *" static="false"/>
            <variable threadsafety="unspecified" name="m_ptr" fullname="SyntroMessageWrapper::m_ptr" href="syntromessagewrapper.html#m_ptr-var" access="public" status="commendable" location="SyntroLink.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroLink.h" lineno="35" type="unsigned char *" static="false"/>
        </class>
        <class threadsafety="unspecified" name="SyntroLink" href="syntrolink.html" access="private" status="internal" location="SyntroLink.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroLink.h" lineno="46" bases="">
            <function threadsafety="unspecified" name="SyntroLink" fullname="SyntroLink::SyntroLink" href="syntrolink.html#SyntroLink" access="public" status="commendable" location="SyntroLink.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroLink.cpp" lineno="217" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="SyntroLink(const QString &amp; logTag)">
                <parameter left="const QString &amp;" right="" name="logTag" default=""/>
            </function>
            <function threadsafety="unspecified" name="addToRXQueue" fullname="SyntroLink::addToRXQueue" href="syntrolink.html#addToRXQueue" access="protected" status="commendable" location="SyntroLink.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroLink.cpp" lineno="256" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="addToRXQueue(SyntroMessageWrapper * wrapper, int nPri)">
                <parameter left="SyntroMessageWrapper *" right="" name="wrapper" default=""/>
                <parameter left="int" right="" name="nPri" default=""/>
            </function>
            <function threadsafety="unspecified" name="addToTXQueue" fullname="SyntroLink::addToTXQueue" href="syntrolink.html#addToTXQueue" access="protected" status="commendable" location="SyntroLink.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroLink.cpp" lineno="241" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="addToTXQueue(SyntroMessageWrapper * wrapper, int nPri)">
                <parameter left="SyntroMessageWrapper *" right="" name="wrapper" default=""/>
                <parameter left="int" right="" name="nPri" default=""/>
            </function>
            <function threadsafety="unspecified" name="checkChecksum" fullname="SyntroLink::checkChecksum" href="syntrolink.html#checkChecksum" access="protected" status="commendable" location="SyntroLink.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroLink.cpp" lineno="357" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="checkChecksum(SYNTRO_MESSAGE * syntroMessage)">
                <parameter left="SYNTRO_MESSAGE *" right="" name="syntroMessage" default=""/>
            </function>
            <function threadsafety="unspecified" name="clearRXQueue" fullname="SyntroLink::clearRXQueue" href="syntrolink.html#clearRXQueue" access="protected" status="commendable" location="SyntroLink.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroLink.cpp" lineno="329" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="clearRXQueue()"/>
            <function threadsafety="unspecified" name="clearTXQueue" fullname="SyntroLink::clearTXQueue" href="syntrolink.html#clearTXQueue" access="protected" status="commendable" location="SyntroLink.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroLink.cpp" lineno="296" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="clearTXQueue()"/>
            <function threadsafety="unspecified" name="computeChecksum" fullname="SyntroLink::computeChecksum" href="syntrolink.html#computeChecksum" access="protected" status="commendable" location="SyntroLink.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroLink.cpp" lineno="343" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="computeChecksum(SYNTRO_MESSAGE * syntroMessage)">
                <parameter left="SYNTRO_MESSAGE *" right="" name="syntroMessage" default=""/>
            </function>
            <function threadsafety="unspecified" name="flushReceive" fullname="SyntroLink::flushReceive" href="syntrolink.html#flushReceive" access="protected" status="commendable" location="SyntroLink.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroLink.cpp" lineno="309" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="flushReceive(SyntroSocket * sock)">
                <parameter left="SyntroSocket *" right="" name="sock" default=""/>
            </function>
            <function threadsafety="unspecified" name="getRXHead" fullname="SyntroLink::getRXHead" href="syntrolink.html#getRXHead" access="protected" status="commendable" location="SyntroLink.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroLink.cpp" lineno="283" virtual="non" meta="plain" const="false" static="false" overload="false" type="SyntroMessageWrapper *" signature="getRXHead(int priority)">
                <parameter left="int" right="" name="priority" default=""/>
            </function>
            <function threadsafety="unspecified" name="getTXHead" fullname="SyntroLink::getTXHead" href="syntrolink.html#getTXHead" access="protected" status="commendable" location="SyntroLink.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroLink.cpp" lineno="271" virtual="non" meta="plain" const="false" static="false" overload="false" type="SyntroMessageWrapper *" signature="getTXHead(int priority)">
                <parameter left="int" right="" name="priority" default=""/>
            </function>
            <function threadsafety="unspecified" name="receive" fullname="SyntroLink::receive" href="syntrolink.html#receive" access="public" status="commendable" location="SyntroLink.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroLink.cpp" lineno="75" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="receive(int priority, int * cmd, int * len, SYNTRO_MESSAGE ** syntroMessage)">
                <parameter left="int" right="" name="priority" default=""/>
                <parameter left="int *" right="" name="cmd" default=""/>
                <parameter left="int *" right="" name="len" default=""/>
                <parameter left="SYNTRO_MESSAGE **" right="" name="syntroMessage" default=""/>
            </function>
            <function threadsafety="unspecified" name="resetReceive" fullname="SyntroLink::resetReceive" href="syntrolink.html#resetReceive" access="protected" status="commendable" location="SyntroLink.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroLink.cpp" lineno="317" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="resetReceive(int priority)">
                <parameter left="int" right="" name="priority" default=""/>
            </function>
            <function threadsafety="unspecified" name="send" fullname="SyntroLink::send" href="syntrolink.html#send" access="public" status="commendable" location="SyntroLink.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroLink.cpp" lineno="48" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="send(int cmd, int len, int priority, SYNTRO_MESSAGE * syntroMessage)">
                <parameter left="int" right="" name="cmd" default=""/>
                <parameter left="int" right="" name="len" default=""/>
                <parameter left="int" right="" name="priority" default=""/>
                <parameter left="SYNTRO_MESSAGE *" right="" name="syntroMessage" default=""/>
            </function>
            <function threadsafety="unspecified" name="tryReceiving" fullname="SyntroLink::tryReceiving" href="syntrolink.html#tryReceiving" access="public" status="commendable" location="SyntroLink.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroLink.cpp" lineno="95" virtual="non" meta="plain" const="false" static="false" overload="false" type="int" signature="tryReceiving(SyntroSocket * sock)">
                <parameter left="SyntroSocket *" right="" name="sock" default=""/>
            </function>
            <function threadsafety="unspecified" name="trySending" fullname="SyntroLink::trySending" href="syntrolink.html#trySending" access="public" status="commendable" location="SyntroLink.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroLink.cpp" lineno="173" virtual="non" meta="plain" const="false" static="false" overload="false" type="int" signature="trySending(SyntroSocket * sock)">
                <parameter left="SyntroSocket *" right="" name="sock" default=""/>
            </function>
            <function threadsafety="unspecified" name="~SyntroLink" fullname="SyntroLink::~SyntroLink" href="syntrolink.html#dtor.SyntroLink" access="public" status="commendable" location="SyntroLink.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroLink.cpp" lineno="234" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~SyntroLink(void )">
                <parameter left="void" right="" name="" default=""/>
            </function>
            <variable threadsafety="unspecified" name="m_RXHead" fullname="SyntroLink::m_RXHead" href="syntrolink.html#m_RXHead-var" access="protected" status="commendable" location="SyntroLink.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroLink.h" lineno="71" type="SyntroMessageWrapper *[SYNTROLINK_PRIORITIES]" static="false"/>
            <variable threadsafety="unspecified" name="m_RXIP" fullname="SyntroLink::m_RXIP" href="syntrolink.html#m_RXIP-var" access="protected" status="commendable" location="SyntroLink.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroLink.h" lineno="75" type="SyntroMessageWrapper *[SYNTROLINK_PRIORITIES]" static="false"/>
            <variable threadsafety="unspecified" name="m_RXIPBytesLeft" fullname="SyntroLink::m_RXIPBytesLeft" href="syntrolink.html#m_RXIPBytesLeft-var" access="protected" status="commendable" location="SyntroLink.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroLink.h" lineno="78" type="int" static="false"/>
            <variable threadsafety="unspecified" name="m_RXIPMsgPtr" fullname="SyntroLink::m_RXIPMsgPtr" href="syntrolink.html#m_RXIPMsgPtr-var" access="protected" status="commendable" location="SyntroLink.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroLink.h" lineno="77" type="unsigned char *" static="false"/>
            <variable threadsafety="unspecified" name="m_RXIPPriority" fullname="SyntroLink::m_RXIPPriority" href="syntrolink.html#m_RXIPPriority-var" access="protected" status="commendable" location="SyntroLink.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroLink.h" lineno="80" type="int" static="false"/>
            <variable threadsafety="unspecified" name="m_RXLock" fullname="SyntroLink::m_RXLock" href="syntrolink.html#m_RXLock-var" access="protected" status="commendable" location="SyntroLink.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroLink.h" lineno="82" type="QMutex" static="false"/>
            <variable threadsafety="unspecified" name="m_RXSM" fullname="SyntroLink::m_RXSM" href="syntrolink.html#m_RXSM-var" access="protected" status="commendable" location="SyntroLink.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroLink.h" lineno="76" type="bool" static="false"/>
            <variable threadsafety="unspecified" name="m_RXTail" fullname="SyntroLink::m_RXTail" href="syntrolink.html#m_RXTail-var" access="protected" status="commendable" location="SyntroLink.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroLink.h" lineno="72" type="SyntroMessageWrapper *[SYNTROLINK_PRIORITIES]" static="false"/>
            <variable threadsafety="unspecified" name="m_TXHead" fullname="SyntroLink::m_TXHead" href="syntrolink.html#m_TXHead-var" access="protected" status="commendable" location="SyntroLink.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroLink.h" lineno="69" type="SyntroMessageWrapper *[SYNTROLINK_PRIORITIES]" static="false"/>
            <variable threadsafety="unspecified" name="m_TXIP" fullname="SyntroLink::m_TXIP" href="syntrolink.html#m_TXIP-var" access="protected" status="commendable" location="SyntroLink.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroLink.h" lineno="74" type="SyntroMessageWrapper *[SYNTROLINK_PRIORITIES]" static="false"/>
            <variable threadsafety="unspecified" name="m_TXLock" fullname="SyntroLink::m_TXLock" href="syntrolink.html#m_TXLock-var" access="protected" status="commendable" location="SyntroLink.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroLink.h" lineno="83" type="QMutex" static="false"/>
            <variable threadsafety="unspecified" name="m_TXTail" fullname="SyntroLink::m_TXTail" href="syntrolink.html#m_TXTail-var" access="protected" status="commendable" location="SyntroLink.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroLink.h" lineno="70" type="SyntroMessageWrapper *[SYNTROLINK_PRIORITIES]" static="false"/>
            <variable threadsafety="unspecified" name="m_logTag" fullname="SyntroLink::m_logTag" href="syntrolink.html#m_logTag-var" access="protected" status="commendable" location="SyntroLink.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroLink.h" lineno="85" type="QString" static="false"/>
            <variable threadsafety="unspecified" name="m_syntroMessage" fullname="SyntroLink::m_syntroMessage" href="syntrolink.html#m_syntroMessage-var" access="protected" status="commendable" location="SyntroLink.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroLink.h" lineno="79" type="SYNTRO_MESSAGE" static="false"/>
        </class>
        <class threadsafety="unspecified" name="SyntroSocket" href="syntrosocket.html" access="private" status="internal" location="SyntroSocket.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroSocket.h" lineno="34" bases="">
            <function threadsafety="unspecified" name="SyntroSocket" fullname="SyntroSocket::SyntroSocket" href="syntrosocket.html#SyntroSocket-2" access="public" status="commendable" location="SyntroSocket.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroSocket.cpp" lineno="33" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="SyntroSocket(SyntroThread * thread)">
                <parameter left="SyntroThread *" right="" name="thread" default=""/>
            </function>
            <function threadsafety="unspecified" name="SyntroSocket" fullname="SyntroSocket::SyntroSocket" href="syntrosocket.html#SyntroSocket" access="public" status="commendable" location="SyntroSocket.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroSocket.cpp" lineno="27" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="SyntroSocket(const QString &amp; logTag)">
                <parameter left="const QString &amp;" right="" name="logTag" default=""/>
            </function>
            <function threadsafety="unspecified" name="clearSocket" fullname="SyntroSocket::clearSocket" href="syntrosocket.html#clearSocket" access="protected" status="commendable" location="SyntroSocket.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroSocket.cpp" lineno="45" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="clearSocket()"/>
            <function threadsafety="unspecified" name="onAccept" fullname="SyntroSocket::onAccept" href="syntrosocket.html#onAccept" access="public" status="commendable" location="SyntroSocket.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroSocket.cpp" lineno="339" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="onAccept()"/>
            <function threadsafety="unspecified" name="onClose" fullname="SyntroSocket::onClose" href="syntrosocket.html#onClose" access="public" status="commendable" location="SyntroSocket.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroSocket.cpp" lineno="345" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="onClose()"/>
            <function threadsafety="unspecified" name="onConnect" fullname="SyntroSocket::onConnect" href="syntrosocket.html#onConnect" access="public" status="commendable" location="SyntroSocket.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroSocket.cpp" lineno="333" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="onConnect()"/>
            <function threadsafety="unspecified" name="onError" fullname="SyntroSocket::onError" href="syntrosocket.html#onError" access="public" status="commendable" location="SyntroSocket.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroSocket.cpp" lineno="363" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="onError(QAbstractSocket::SocketError socketError)">
                <parameter left="QAbstractSocket::SocketError" right="" name="socketError" default=""/>
            </function>
            <function threadsafety="unspecified" name="onReceive" fullname="SyntroSocket::onReceive" href="syntrosocket.html#onReceive" access="public" status="commendable" location="SyntroSocket.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroSocket.cpp" lineno="351" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="onReceive()"/>
            <function threadsafety="unspecified" name="onSend" fullname="SyntroSocket::onSend" href="syntrosocket.html#onSend" access="public" status="commendable" location="SyntroSocket.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroSocket.cpp" lineno="357" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="onSend(qint64 bytes)">
                <parameter left="qint64" right="" name="bytes" default=""/>
            </function>
            <function threadsafety="unspecified" name="onState" fullname="SyntroSocket::onState" href="syntrosocket.html#onState" access="public" status="commendable" location="SyntroSocket.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroSocket.cpp" lineno="378" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="onState(QAbstractSocket::SocketState socketState)">
                <parameter left="QAbstractSocket::SocketState" right="" name="socketState" default=""/>
            </function>
            <function threadsafety="unspecified" name="sockAccept" fullname="SyntroSocket::sockAccept" href="syntrosocket.html#sockAccept" access="public" status="commendable" location="SyntroSocket.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroSocket.cpp" lineno="104" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="sockAccept(SyntroSocket &amp; sock, char * IpAddr, int * port)">
                <parameter left="SyntroSocket &amp;" right="" name="sock" default=""/>
                <parameter left="char *" right="" name="IpAddr" default=""/>
                <parameter left="int *" right="" name="port" default=""/>
            </function>
            <function threadsafety="unspecified" name="sockClose" fullname="SyntroSocket::sockClose" href="syntrosocket.html#sockClose" access="public" status="commendable" location="SyntroSocket.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroSocket.cpp" lineno="115" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="sockClose()"/>
            <function threadsafety="unspecified" name="sockConnect" fullname="SyntroSocket::sockConnect" href="syntrosocket.html#sockConnect" access="public" status="commendable" location="SyntroSocket.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroSocket.cpp" lineno="94" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="sockConnect(const char * addr, int port)">
                <parameter left="const char *" right="" name="addr" default=""/>
                <parameter left="int" right="" name="port" default=""/>
            </function>
            <function threadsafety="unspecified" name="sockCreate" fullname="SyntroSocket::sockCreate" href="syntrosocket.html#sockCreate" access="public" status="commendable" location="SyntroSocket.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroSocket.cpp" lineno="61" virtual="non" meta="plain" const="false" static="false" overload="false" type="int" signature="sockCreate(int socketPort, int socketType, int flags)">
                <parameter left="int" right="" name="socketPort" default=""/>
                <parameter left="int" right="" name="socketType" default=""/>
                <parameter left="int" right="" name="flags" default="0"/>
            </function>
            <function threadsafety="unspecified" name="sockEnableBroadcast" fullname="SyntroSocket::sockEnableBroadcast" href="syntrosocket.html#sockEnableBroadcast" access="public" status="commendable" location="SyntroSocket.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroSocket.cpp" lineno="181" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="sockEnableBroadcast(int flag)">
                <parameter left="int" right="" name="flag" default=""/>
            </function>
            <function threadsafety="unspecified" name="sockGetConnectionID" fullname="SyntroSocket::sockGetConnectionID" href="syntrosocket.html#sockGetConnectionID" access="public" status="commendable" location="SyntroSocket.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroSocket.cpp" lineno="253" virtual="non" meta="plain" const="false" static="false" overload="false" type="int" signature="sockGetConnectionID()"/>
            <function threadsafety="unspecified" name="sockListen" fullname="SyntroSocket::sockListen" href="syntrosocket.html#sockListen" access="public" status="commendable" location="SyntroSocket.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroSocket.cpp" lineno="143" virtual="non" meta="plain" const="false" static="false" overload="false" type="int" signature="sockListen()"/>
            <function threadsafety="unspecified" name="sockPendingDatagramSize" fullname="SyntroSocket::sockPendingDatagramSize" href="syntrosocket.html#sockPendingDatagramSize" access="public" status="commendable" location="SyntroSocket.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroSocket.cpp" lineno="235" virtual="non" meta="plain" const="false" static="false" overload="false" type="int" signature="sockPendingDatagramSize()"/>
            <function threadsafety="unspecified" name="sockReceive" fullname="SyntroSocket::sockReceive" href="syntrosocket.html#sockReceive" access="public" status="commendable" location="SyntroSocket.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroSocket.cpp" lineno="153" virtual="non" meta="plain" const="false" static="false" overload="false" type="int" signature="sockReceive(void * buf, int bufLen)">
                <parameter left="void *" right="" name="buf" default=""/>
                <parameter left="int" right="" name="bufLen" default=""/>
            </function>
            <function threadsafety="unspecified" name="sockReceiveFrom" fullname="SyntroSocket::sockReceiveFrom" href="syntrosocket.html#sockReceiveFrom" access="public" status="commendable" location="SyntroSocket.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroSocket.cpp" lineno="220" virtual="non" meta="plain" const="false" static="false" overload="false" type="int" signature="sockReceiveFrom(void * buf, int bufLen, char * IpAddr, unsigned int * port, int flags)">
                <parameter left="void *" right="" name="buf" default=""/>
                <parameter left="int" right="" name="bufLen" default=""/>
                <parameter left="char *" right="" name="IpAddr" default=""/>
                <parameter left="unsigned int *" right="" name="port" default=""/>
                <parameter left="int" right="" name="flags" default="0"/>
            </function>
            <function threadsafety="unspecified" name="sockSend" fullname="SyntroSocket::sockSend" href="syntrosocket.html#sockSend" access="public" status="commendable" location="SyntroSocket.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroSocket.cpp" lineno="170" virtual="non" meta="plain" const="false" static="false" overload="false" type="int" signature="sockSend(void * buf, int bufLen)">
                <parameter left="void *" right="" name="buf" default=""/>
                <parameter left="int" right="" name="bufLen" default=""/>
            </function>
            <function threadsafety="unspecified" name="sockSendTo" fullname="SyntroSocket::sockSendTo" href="syntrosocket.html#sockSendTo" access="public" status="commendable" location="SyntroSocket.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroSocket.cpp" lineno="208" virtual="non" meta="plain" const="false" static="false" overload="false" type="int" signature="sockSendTo(const void * buf, int bufLen, int hostPort, char * host)">
                <parameter left="const void *" right="" name="buf" default=""/>
                <parameter left="int" right="" name="bufLen" default=""/>
                <parameter left="int" right="" name="hostPort" default=""/>
                <parameter left="char *" right="" name="host" default="NULL"/>
            </function>
            <function threadsafety="unspecified" name="sockSetAcceptMsg" fullname="SyntroSocket::sockSetAcceptMsg" href="syntrosocket.html#sockSetAcceptMsg" access="public" status="commendable" location="SyntroSocket.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroSocket.cpp" lineno="274" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="sockSetAcceptMsg(int msg)">
                <parameter left="int" right="" name="msg" default=""/>
            </function>
            <function threadsafety="unspecified" name="sockSetCloseMsg" fullname="SyntroSocket::sockSetCloseMsg" href="syntrosocket.html#sockSetCloseMsg" access="public" status="commendable" location="SyntroSocket.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroSocket.cpp" lineno="285" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="sockSetCloseMsg(int msg)">
                <parameter left="int" right="" name="msg" default=""/>
            </function>
            <function threadsafety="unspecified" name="sockSetConnectMsg" fullname="SyntroSocket::sockSetConnectMsg" href="syntrosocket.html#sockSetConnectMsg" access="public" status="commendable" location="SyntroSocket.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroSocket.cpp" lineno="263" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="sockSetConnectMsg(int msg)">
                <parameter left="int" right="" name="msg" default=""/>
            </function>
            <function threadsafety="unspecified" name="sockSetReceiveBufSize" fullname="SyntroSocket::sockSetReceiveBufSize" href="syntrosocket.html#sockSetReceiveBufSize" access="public" status="commendable" location="SyntroSocket.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroSocket.cpp" lineno="186" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="sockSetReceiveBufSize(int size)">
                <parameter left="int" right="" name="size" default=""/>
            </function>
            <function threadsafety="unspecified" name="sockSetReceiveMsg" fullname="SyntroSocket::sockSetReceiveMsg" href="syntrosocket.html#sockSetReceiveMsg" access="public" status="commendable" location="SyntroSocket.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroSocket.cpp" lineno="295" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="sockSetReceiveMsg(int msg)">
                <parameter left="int" right="" name="msg" default=""/>
            </function>
            <function threadsafety="unspecified" name="sockSetSendBufSize" fullname="SyntroSocket::sockSetSendBufSize" href="syntrosocket.html#sockSetSendBufSize" access="public" status="commendable" location="SyntroSocket.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroSocket.cpp" lineno="196" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="sockSetSendBufSize(int size)">
                <parameter left="int" right="" name="size" default=""/>
            </function>
            <function threadsafety="unspecified" name="sockSetSendMsg" fullname="SyntroSocket::sockSetSendMsg" href="syntrosocket.html#sockSetSendMsg" access="public" status="commendable" location="SyntroSocket.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroSocket.cpp" lineno="314" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="sockSetSendMsg(int msg)">
                <parameter left="int" right="" name="msg" default=""/>
            </function>
            <function threadsafety="unspecified" name="sockSetThread" fullname="SyntroSocket::sockSetThread" href="syntrosocket.html#sockSetThread" access="public" status="commendable" location="SyntroSocket.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroSocket.cpp" lineno="258" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="sockSetThread(SyntroThread * thread)">
                <parameter left="SyntroThread *" right="" name="thread" default=""/>
            </function>
            <function threadsafety="unspecified" name="~SyntroSocket" fullname="SyntroSocket::~SyntroSocket" href="syntrosocket.html#dtor.SyntroSocket" access="public" status="commendable" location="SyntroSocket.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroSocket.cpp" lineno="245" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~SyntroSocket()"/>
            <variable threadsafety="unspecified" name="m_TCPSocket" fullname="SyntroSocket::m_TCPSocket" href="syntrosocket.html#m_TCPSocket-var" access="protected" status="commendable" location="SyntroSocket.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroSocket.h" lineno="79" type="QTcpSocket *" static="false"/>
            <variable threadsafety="unspecified" name="m_UDPSocket" fullname="SyntroSocket::m_UDPSocket" href="syntrosocket.html#m_UDPSocket-var" access="protected" status="commendable" location="SyntroSocket.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroSocket.h" lineno="78" type="QUdpSocket *" static="false"/>
            <variable threadsafety="unspecified" name="m_connectionID" fullname="SyntroSocket::m_connectionID" href="syntrosocket.html#m_connectionID-var" access="protected" status="commendable" location="SyntroSocket.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroSocket.h" lineno="75" type="int" static="false"/>
            <variable threadsafety="unspecified" name="m_logTag" fullname="SyntroSocket::m_logTag" href="syntrosocket.html#m_logTag-var" access="protected" status="commendable" location="SyntroSocket.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroSocket.h" lineno="91" type="QString" static="false"/>
            <variable threadsafety="unspecified" name="m_onAcceptMsg" fullname="SyntroSocket::m_onAcceptMsg" href="syntrosocket.html#m_onAcceptMsg-var" access="protected" status="commendable" location="SyntroSocket.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroSocket.h" lineno="84" type="int" static="false"/>
            <variable threadsafety="unspecified" name="m_onCloseMsg" fullname="SyntroSocket::m_onCloseMsg" href="syntrosocket.html#m_onCloseMsg-var" access="protected" status="commendable" location="SyntroSocket.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroSocket.h" lineno="85" type="int" static="false"/>
            <variable threadsafety="unspecified" name="m_onConnectMsg" fullname="SyntroSocket::m_onConnectMsg" href="syntrosocket.html#m_onConnectMsg-var" access="protected" status="commendable" location="SyntroSocket.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroSocket.h" lineno="83" type="int" static="false"/>
            <variable threadsafety="unspecified" name="m_onReceiveMsg" fullname="SyntroSocket::m_onReceiveMsg" href="syntrosocket.html#m_onReceiveMsg-var" access="protected" status="commendable" location="SyntroSocket.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroSocket.h" lineno="86" type="int" static="false"/>
            <variable threadsafety="unspecified" name="m_onSendMsg" fullname="SyntroSocket::m_onSendMsg" href="syntrosocket.html#m_onSendMsg-var" access="protected" status="commendable" location="SyntroSocket.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroSocket.h" lineno="87" type="int" static="false"/>
            <variable threadsafety="unspecified" name="m_ownerThread" fullname="SyntroSocket::m_ownerThread" href="syntrosocket.html#m_ownerThread-var" access="protected" status="commendable" location="SyntroSocket.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroSocket.h" lineno="74" type="SyntroThread *" static="false"/>
            <variable threadsafety="unspecified" name="m_server" fullname="SyntroSocket::m_server" href="syntrosocket.html#m_server-var" access="protected" status="commendable" location="SyntroSocket.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroSocket.h" lineno="80" type="QTcpServer *" static="false"/>
            <variable threadsafety="unspecified" name="m_sockPort" fullname="SyntroSocket::m_sockPort" href="syntrosocket.html#m_sockPort-var" access="protected" status="commendable" location="SyntroSocket.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroSocket.h" lineno="77" type="int" static="false"/>
            <variable threadsafety="unspecified" name="m_sockType" fullname="SyntroSocket::m_sockType" href="syntrosocket.html#m_sockType-var" access="protected" status="commendable" location="SyntroSocket.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroSocket.h" lineno="76" type="int" static="false"/>
            <variable threadsafety="unspecified" name="m_state" fullname="SyntroSocket::m_state" href="syntrosocket.html#m_state-var" access="protected" status="commendable" location="SyntroSocket.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroSocket.h" lineno="89" type="int" static="false"/>
        </class>
        <class threadsafety="unspecified" name="SyntroThreadMsg" href="syntrothreadmsg.html" access="private" status="internal" location="SyntroThread.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroThread.h" lineno="47" bases="">
            <function threadsafety="unspecified" name="SyntroThreadMsg" fullname="SyntroThreadMsg::SyntroThreadMsg" href="syntrothreadmsg.html#SyntroThreadMsg" access="private" status="internal" location="SyntroThread.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroThread.h" lineno="50" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="SyntroThreadMsg(QEvent::Type nEvent)">
                <parameter left="QEvent::Type" right="" name="nEvent" default=""/>
            </function>
            <variable threadsafety="unspecified" name="intParam" fullname="SyntroThreadMsg::intParam" href="syntrothreadmsg.html#intParam-var" access="public" status="commendable" location="SyntroThread.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroThread.h" lineno="52" type="int" static="false"/>
            <variable threadsafety="unspecified" name="message" fullname="SyntroThreadMsg::message" href="syntrothreadmsg.html#message-var" access="public" status="commendable" location="SyntroThread.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroThread.h" lineno="51" type="int" static="false"/>
            <variable threadsafety="unspecified" name="ptrParam" fullname="SyntroThreadMsg::ptrParam" href="syntrothreadmsg.html#ptrParam-var" access="public" status="commendable" location="SyntroThread.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroThread.h" lineno="53" type="void *" static="false"/>
        </class>
        <class threadsafety="unspecified" name="InternalThread" href="internalthread.html" access="private" status="internal" location="SyntroThread.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroThread.h" lineno="56" bases="">
            <function threadsafety="unspecified" name="msleep" fullname="InternalThread::msleep" href="internalthread.html#msleep" access="public" status="commendable" location="SyntroThread.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroThread.h" lineno="61" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="msleep(unsigned long msecs)">
                <parameter left="unsigned long" right="" name="msecs" default=""/>
            </function>
        </class>
        <page name="SyntroLib" href="syntrolib-module.html" access="private" status="internal" subtype="module" title="" fulltitle="" subtitle=""/>
        <class threadsafety="unspecified" name="SyntroThread" href="syntrothread.html" access="public" status="commendable" location="SyntroThread.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroThread.h" lineno="64" bases="" module="SyntroLib" brief="SyntroThread is a lightweight wrapper for threading.">
            <function threadsafety="unspecified" name="SyntroThread" fullname="SyntroThread::SyntroThread" href="syntrothread.html#SyntroThread" access="public" status="commendable" location="SyntroThread.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroThread.h" lineno="69" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="SyntroThread(const QString &amp; threadName, const QString &amp; logTag)">
                <parameter left="const QString &amp;" right="" name="threadName" default=""/>
                <parameter left="const QString &amp;" right="" name="logTag" default=""/>
            </function>
            <function threadsafety="unspecified" name="cleanup" fullname="SyntroThread::cleanup" href="syntrothread.html#cleanup" access="public" status="commendable" location="SyntroThread.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroThread.h" lineno="83" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="cleanup()"/>
            <function threadsafety="unspecified" name="exitThread" fullname="SyntroThread::exitThread" href="syntrothread.html#exitThread" access="public" status="commendable" location="SyntroThread.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroThread.h" lineno="75" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="exitThread()"/>
            <function threadsafety="unspecified" name="finishThread" fullname="SyntroThread::finishThread" href="syntrothread.html#finishThread" access="protected" status="commendable" location="SyntroThread.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroThread.h" lineno="93" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="finishThread()"/>
            <function threadsafety="unspecified" name="initThread" fullname="SyntroThread::initThread" href="syntrothread.html#initThread" access="protected" status="commendable" location="SyntroThread.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroThread.h" lineno="92" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="initThread()"/>
            <function threadsafety="unspecified" name="internalEndThread" fullname="SyntroThread::internalEndThread" href="syntrothread.html#internalEndThread" access="public" status="commendable" location="SyntroThread.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroThread.h" lineno="87" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="internalEndThread()"/>
            <function threadsafety="unspecified" name="internalKillThread" fullname="SyntroThread::internalKillThread" href="syntrothread.html#internalKillThread" access="public" status="commendable" location="SyntroThread.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroThread.h" lineno="88" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="internalKillThread()"/>
            <function threadsafety="unspecified" name="isRunning" fullname="SyntroThread::isRunning" href="syntrothread.html#isRunning" access="public" status="commendable" location="SyntroThread.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroThread.h" lineno="77" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="isRunning()"/>
            <function threadsafety="unspecified" name="postThreadMessage" fullname="SyntroThread::postThreadMessage" href="syntrothread.html#postThreadMessage" access="public" status="commendable" location="SyntroThread.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroThread.h" lineno="72" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="postThreadMessage(int message, int intParam, void * ptrParam)">
                <parameter left="int" right="" name="message" default=""/>
                <parameter left="int" right="" name="intParam" default=""/>
                <parameter left="void *" right="" name="ptrParam" default=""/>
            </function>
            <function threadsafety="unspecified" name="resumeThread" fullname="SyntroThread::resumeThread" href="syntrothread.html#resumeThread" access="public" status="commendable" location="SyntroThread.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroThread.h" lineno="73" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="resumeThread()"/>
            <function threadsafety="unspecified" name="thread" fullname="SyntroThread::thread" href="syntrothread.html#thread" access="public" status="commendable" location="SyntroThread.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroThread.h" lineno="79" virtual="non" meta="plain" const="false" static="false" overload="false" type="InternalThread *" signature="thread()"/>
            <function threadsafety="unspecified" name="~SyntroThread" fullname="SyntroThread::~SyntroThread" href="syntrothread.html#dtor.SyntroThread" access="private" status="internal" location="SyntroThread.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroThread.h" lineno="70" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~SyntroThread()"/>
            <function threadsafety="unspecified" name="internalRunLoop" fullname="SyntroThread::internalRunLoop" href="syntrothread.html#internalRunLoop" access="private" status="internal" location="SyntroThread.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroThread.h" lineno="82" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="internalRunLoop()"/>
            <function threadsafety="unspecified" name="eventFilter" fullname="SyntroThread::eventFilter" href="syntrothread.html#eventFilter" access="private" status="internal" location="SyntroThread.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroThread.h" lineno="96" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="eventFilter(QObject * obj, QEvent * event)">
                <parameter left="QObject *" right="" name="obj" default=""/>
                <parameter left="QEvent *" right="" name="event" default=""/>
            </function>
            <function threadsafety="unspecified" name="msleep" fullname="SyntroThread::msleep" href="syntrothread.html#msleep" access="protected" status="commendable" location="SyntroThread.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroThread.h" lineno="95" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="msleep(unsigned long msecs)">
                <parameter left="unsigned long" right="" name="msecs" default=""/>
            </function>
            <function threadsafety="unspecified" name="processMessage" fullname="SyntroThread::processMessage" href="syntrothread.html#processMessage" access="protected" status="commendable" location="SyntroThread.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroThread.h" lineno="91" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="processMessage(SyntroThreadMsg * msg)">
                <parameter left="SyntroThreadMsg *" right="" name="msg" default=""/>
            </function>
            <function threadsafety="unspecified" name="running" fullname="SyntroThread::running" href="syntrothread.html#running" access="public" status="commendable" location="SyntroThread.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroThread.h" lineno="86" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="running()"/>
            <variable threadsafety="unspecified" name="m_event" fullname="SyntroThread::m_event" href="syntrothread.html#m_event-var" access="protected" status="commendable" location="SyntroThread.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroThread.h" lineno="98" type="int" static="false"/>
            <variable threadsafety="unspecified" name="m_logTag" fullname="SyntroThread::m_logTag" href="syntrothread.html#m_logTag-var" access="protected" status="commendable" location="SyntroThread.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroThread.h" lineno="100" type="QString" static="false"/>
        </class>
        <class threadsafety="unspecified" name="SyntroUtils" href="syntroutils.html" access="public" status="commendable" location="SyntroUtils.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroUtils.h" lineno="140" bases="" module="SyntroLib" brief="SyntroUtils provides a set of utility functions for Syntro apps.">
            <function threadsafety="unspecified" name="avmuxHeaderInit" fullname="SyntroUtils::avmuxHeaderInit" href="syntroutils.html#avmuxHeaderInit" access="public" status="commendable" location="SyntroUtils.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroUtils.cpp" lineno="931" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="avmuxHeaderInit(SYNTRO_RECORD_AVMUX * avmuxHead, SYNTRO_AVPARAMS * avParams, int param, int recordIndex, int muxSize, int videoSize, int audioSize)">
                <parameter left="SYNTRO_RECORD_AVMUX *" right="" name="avmuxHead" default=""/>
                <parameter left="SYNTRO_AVPARAMS *" right="" name="avParams" default=""/>
                <parameter left="int" right="" name="param" default=""/>
                <parameter left="int" right="" name="recordIndex" default=""/>
                <parameter left="int" right="" name="muxSize" default=""/>
                <parameter left="int" right="" name="videoSize" default=""/>
                <parameter left="int" right="" name="audioSize" default=""/>
            </function>
            <function threadsafety="unspecified" name="avmuxHeaderToAVParams" fullname="SyntroUtils::avmuxHeaderToAVParams" href="syntroutils.html#avmuxHeaderToAVParams" access="public" status="commendable" location="SyntroUtils.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroUtils.cpp" lineno="962" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="avmuxHeaderToAVParams(SYNTRO_RECORD_AVMUX * avmuxHead, SYNTRO_AVPARAMS * avParams)">
                <parameter left="SYNTRO_RECORD_AVMUX *" right="" name="avmuxHead" default=""/>
                <parameter left="SYNTRO_AVPARAMS *" right="" name="avParams" default=""/>
            </function>
            <function threadsafety="unspecified" name="videoHeaderInit" fullname="SyntroUtils::videoHeaderInit" href="syntroutils.html#videoHeaderInit" access="public" status="commendable" location="SyntroUtils.cpp" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroUtils.cpp" lineno="1016" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="videoHeaderInit(SYNTRO_RECORD_VIDEO * videoHead, int width, int height, int size)">
                <parameter left="SYNTRO_RECORD_VIDEO *" right="" name="videoHead" default=""/>
                <parameter left="int" right="" name="width" default=""/>
                <parameter left="int" right="" name="height" default=""/>
                <parameter left="int" right="" name="size" default=""/>
            </function>
            <function threadsafety="unspecified" name="IPLoopback" fullname="SyntroUtils::IPLoopback" href="syntroutils.html#IPLoopback" access="public" status="commendable" location="SyntroUtils.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroUtils.h" lineno="195" virtual="non" meta="plain" const="false" static="true" overload="false" type="bool" signature="IPLoopback(SYNTRO_IPADDR addr)">
                <parameter left="SYNTRO_IPADDR" right="" name="addr" default=""/>
            </function>
            <function threadsafety="unspecified" name="IPZero" fullname="SyntroUtils::IPZero" href="syntroutils.html#IPZero" access="public" status="commendable" location="SyntroUtils.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroUtils.h" lineno="194" virtual="non" meta="plain" const="false" static="true" overload="false" type="bool" signature="IPZero(SYNTRO_IPADDR addr)">
                <parameter left="SYNTRO_IPADDR" right="" name="addr" default=""/>
            </function>
            <function threadsafety="unspecified" name="UIDHigher" fullname="SyntroUtils::UIDHigher" href="syntroutils.html#UIDHigher" access="public" status="commendable" location="SyntroUtils.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroUtils.h" lineno="204" virtual="non" meta="plain" const="false" static="true" overload="false" type="bool" signature="UIDHigher(SYNTRO_UID * a, SYNTRO_UID * b)">
                <parameter left="SYNTRO_UID *" right="" name="a" default=""/>
                <parameter left="SYNTRO_UID *" right="" name="b" default=""/>
            </function>
            <function threadsafety="unspecified" name="UIDSTRtoUID" fullname="SyntroUtils::UIDSTRtoUID" href="syntroutils.html#UIDSTRtoUID" access="public" status="commendable" location="SyntroUtils.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroUtils.h" lineno="199" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="UIDSTRtoUID(SYNTRO_UIDSTR sourceStr, SYNTRO_UID * destUID)">
                <parameter left="SYNTRO_UIDSTR" right="" name="sourceStr" default=""/>
                <parameter left="SYNTRO_UID *" right="" name="destUID" default=""/>
            </function>
            <function threadsafety="unspecified" name="UIDtoUIDSTR" fullname="SyntroUtils::UIDtoUIDSTR" href="syntroutils.html#UIDtoUIDSTR" access="public" status="commendable" location="SyntroUtils.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroUtils.h" lineno="200" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="UIDtoUIDSTR(SYNTRO_UID * sourceUID, SYNTRO_UIDSTR destStr)">
                <parameter left="SYNTRO_UID *" right="" name="sourceUID" default=""/>
                <parameter left="SYNTRO_UIDSTR" right="" name="destStr" default=""/>
            </function>
            <function threadsafety="unspecified" name="avmuxHeaderValidate" fullname="SyntroUtils::avmuxHeaderValidate" href="syntroutils.html#avmuxHeaderValidate" access="public" status="commendable" location="SyntroUtils.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroUtils.h" lineno="174" virtual="non" meta="plain" const="false" static="true" overload="false" type="bool" signature="avmuxHeaderValidate(SYNTRO_RECORD_AVMUX * avmuxHead, int length, unsigned char ** muxPtr, int &amp; muxLength, unsigned char ** videoPtr, int &amp; videoLength, unsigned char ** audioPtr, int &amp; audioLength)">
                <parameter left="SYNTRO_RECORD_AVMUX *" right="" name="avmuxHead" default=""/>
                <parameter left="int" right="" name="length" default=""/>
                <parameter left="unsigned char **" right="" name="muxPtr" default=""/>
                <parameter left="int &amp;" right="" name="muxLength" default=""/>
                <parameter left="unsigned char **" right="" name="videoPtr" default=""/>
                <parameter left="int &amp;" right="" name="videoLength" default=""/>
                <parameter left="unsigned char **" right="" name="audioPtr" default=""/>
                <parameter left="int &amp;" right="" name="audioLength" default=""/>
            </function>
            <function threadsafety="unspecified" name="checkConsoleModeFlag" fullname="SyntroUtils::checkConsoleModeFlag" href="syntroutils.html#checkConsoleModeFlag" access="public" status="commendable" location="SyntroUtils.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroUtils.h" lineno="160" virtual="non" meta="plain" const="false" static="true" overload="false" type="bool" signature="checkConsoleModeFlag(int argc, char *[] argv)">
                <parameter left="int" right="" name="argc" default=""/>
                <parameter left="char *[]" right="" name="argv" default=""/>
            </function>
            <function threadsafety="unspecified" name="checkDaemonModeFlag" fullname="SyntroUtils::checkDaemonModeFlag" href="syntroutils.html#checkDaemonModeFlag" access="public" status="commendable" location="SyntroUtils.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroUtils.h" lineno="161" virtual="non" meta="plain" const="false" static="true" overload="false" type="bool" signature="checkDaemonModeFlag(int argc, char *[] argv)">
                <parameter left="int" right="" name="argc" default=""/>
                <parameter left="char *[]" right="" name="argv" default=""/>
            </function>
            <function threadsafety="unspecified" name="compareUID" fullname="SyntroUtils::compareUID" href="syntroutils.html#compareUID" access="public" status="commendable" location="SyntroUtils.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroUtils.h" lineno="203" virtual="non" meta="plain" const="false" static="true" overload="false" type="bool" signature="compareUID(SYNTRO_UID * a, SYNTRO_UID * b)">
                <parameter left="SYNTRO_UID *" right="" name="a" default=""/>
                <parameter left="SYNTRO_UID *" right="" name="b" default=""/>
            </function>
            <function threadsafety="unspecified" name="convertIPStringToIPAddr" fullname="SyntroUtils::convertIPStringToIPAddr" href="syntroutils.html#convertIPStringToIPAddr" access="public" status="commendable" location="SyntroUtils.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroUtils.h" lineno="193" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="convertIPStringToIPAddr(char * IPStr, SYNTRO_IPADDR IPAddr)">
                <parameter left="char *" right="" name="IPStr" default=""/>
                <parameter left="SYNTRO_IPADDR" right="" name="IPAddr" default=""/>
            </function>
            <function threadsafety="unspecified" name="convertInt64ToUC8" fullname="SyntroUtils::convertInt64ToUC8" href="syntroutils.html#convertInt64ToUC8" access="public" status="commendable" location="SyntroUtils.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroUtils.h" lineno="210" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="convertInt64ToUC8(qint64 val, SYNTRO_UC8 uc8)">
                <parameter left="qint64" right="" name="val" default=""/>
                <parameter left="SYNTRO_UC8" right="" name="uc8" default=""/>
            </function>
            <function threadsafety="unspecified" name="convertIntToUC2" fullname="SyntroUtils::convertIntToUC2" href="syntroutils.html#convertIntToUC2" access="public" status="commendable" location="SyntroUtils.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroUtils.h" lineno="215" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="convertIntToUC2(int val, SYNTRO_UC2 uc2)">
                <parameter left="int" right="" name="val" default=""/>
                <parameter left="SYNTRO_UC2" right="" name="uc2" default=""/>
            </function>
            <function threadsafety="unspecified" name="convertIntToUC4" fullname="SyntroUtils::convertIntToUC4" href="syntroutils.html#convertIntToUC4" access="public" status="commendable" location="SyntroUtils.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroUtils.h" lineno="212" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="convertIntToUC4(int val, SYNTRO_UC4 uc4)">
                <parameter left="int" right="" name="val" default=""/>
                <parameter left="SYNTRO_UC4" right="" name="uc4" default=""/>
            </function>
            <function threadsafety="unspecified" name="convertUC2ToInt" fullname="SyntroUtils::convertUC2ToInt" href="syntroutils.html#convertUC2ToInt" access="public" status="commendable" location="SyntroUtils.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroUtils.h" lineno="213" virtual="non" meta="plain" const="false" static="true" overload="false" type="int" signature="convertUC2ToInt(SYNTRO_UC2 uc2)">
                <parameter left="SYNTRO_UC2" right="" name="uc2" default=""/>
            </function>
            <function threadsafety="unspecified" name="convertUC2ToUInt" fullname="SyntroUtils::convertUC2ToUInt" href="syntroutils.html#convertUC2ToUInt" access="public" status="commendable" location="SyntroUtils.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroUtils.h" lineno="214" virtual="non" meta="plain" const="false" static="true" overload="false" type="int" signature="convertUC2ToUInt(SYNTRO_UC2 uc2)">
                <parameter left="SYNTRO_UC2" right="" name="uc2" default=""/>
            </function>
            <function threadsafety="unspecified" name="convertUC4ToInt" fullname="SyntroUtils::convertUC4ToInt" href="syntroutils.html#convertUC4ToInt" access="public" status="commendable" location="SyntroUtils.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroUtils.h" lineno="211" virtual="non" meta="plain" const="false" static="true" overload="false" type="int" signature="convertUC4ToInt(SYNTRO_UC4 uc4)">
                <parameter left="SYNTRO_UC4" right="" name="uc4" default=""/>
            </function>
            <function threadsafety="unspecified" name="convertUC8ToInt64" fullname="SyntroUtils::convertUC8ToInt64" href="syntroutils.html#convertUC8ToInt64" access="public" status="commendable" location="SyntroUtils.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroUtils.h" lineno="209" virtual="non" meta="plain" const="false" static="true" overload="false" type="qint64" signature="convertUC8ToInt64(SYNTRO_UC8 uc8)">
                <parameter left="SYNTRO_UC8" right="" name="uc8" default=""/>
            </function>
            <function threadsafety="unspecified" name="copyUC2" fullname="SyntroUtils::copyUC2" href="syntroutils.html#copyUC2" access="public" status="commendable" location="SyntroUtils.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroUtils.h" lineno="216" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="copyUC2(SYNTRO_UC2 dst, SYNTRO_UC2 src)">
                <parameter left="SYNTRO_UC2" right="" name="dst" default=""/>
                <parameter left="SYNTRO_UC2" right="" name="src" default=""/>
            </function>
            <function threadsafety="unspecified" name="crackServicePath" fullname="SyntroUtils::crackServicePath" href="syntroutils.html#crackServicePath" access="public" status="commendable" location="SyntroUtils.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroUtils.h" lineno="166" virtual="non" meta="plain" const="false" static="true" overload="false" type="bool" signature="crackServicePath(QString servicePath, QString &amp; regionName, QString &amp; componentName, QString &amp; serviceName)">
                <parameter left="QString" right="" name="servicePath" default=""/>
                <parameter left="QString &amp;" right="" name="regionName" default=""/>
                <parameter left="QString &amp;" right="" name="componentName" default=""/>
                <parameter left="QString &amp;" right="" name="serviceName" default=""/>
            </function>
            <function threadsafety="unspecified" name="createEHEAD" fullname="SyntroUtils::createEHEAD" href="syntroutils.html#createEHEAD" access="public" status="commendable" location="SyntroUtils.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroUtils.h" lineno="163" virtual="non" meta="plain" const="false" static="true" overload="false" type="SYNTRO_EHEAD *" signature="createEHEAD(SYNTRO_UID * sourceUID, int sourcePort, SYNTRO_UID * destUID, int destPort, unsigned char seq, int len)">
                <parameter left="SYNTRO_UID *" right="" name="sourceUID" default=""/>
                <parameter left="int" right="" name="sourcePort" default=""/>
                <parameter left="SYNTRO_UID *" right="" name="destUID" default=""/>
                <parameter left="int" right="" name="destPort" default=""/>
                <parameter left="unsigned char" right="" name="seq" default=""/>
                <parameter left="int" right="" name="len" default=""/>
            </function>
            <function threadsafety="unspecified" name="displayIPAddr" fullname="SyntroUtils::displayIPAddr" href="syntroutils.html#displayIPAddr" access="public" status="commendable" location="SyntroUtils.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroUtils.h" lineno="192" virtual="non" meta="plain" const="false" static="true" overload="false" type="QString" signature="displayIPAddr(SYNTRO_IPADDR address)">
                <parameter left="SYNTRO_IPADDR" right="" name="address" default=""/>
            </function>
            <function threadsafety="unspecified" name="displayUID" fullname="SyntroUtils::displayUID" href="syntroutils.html#displayUID" access="public" status="commendable" location="SyntroUtils.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroUtils.h" lineno="202" virtual="non" meta="plain" const="false" static="true" overload="false" type="QString" signature="displayUID(SYNTRO_UID * uid)">
                <parameter left="SYNTRO_UID *" right="" name="uid" default=""/>
            </function>
            <function threadsafety="unspecified" name="getAppName" fullname="SyntroUtils::getAppName" href="syntroutils.html#getAppName" access="public" status="commendable" location="SyntroUtils.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroUtils.h" lineno="154" virtual="non" meta="plain" const="false" static="true" overload="false" type="const QString &amp;" signature="getAppName()"/>
            <function threadsafety="unspecified" name="getAppType" fullname="SyntroUtils::getAppType" href="syntroutils.html#getAppType" access="public" status="commendable" location="SyntroUtils.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroUtils.h" lineno="155" virtual="non" meta="plain" const="false" static="true" overload="false" type="const QString &amp;" signature="getAppType()"/>
            <function threadsafety="unspecified" name="getMyBroadcastAddress" fullname="SyntroUtils::getMyBroadcastAddress" href="syntroutils.html#getMyBroadcastAddress" access="public" status="commendable" location="SyntroUtils.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroUtils.h" lineno="225" virtual="non" meta="plain" const="false" static="true" overload="false" type="QHostAddress" signature="getMyBroadcastAddress()"/>
            <function threadsafety="unspecified" name="getMyIPAddr" fullname="SyntroUtils::getMyIPAddr" href="syntroutils.html#getMyIPAddr" access="public" status="commendable" location="SyntroUtils.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroUtils.h" lineno="157" virtual="non" meta="plain" const="false" static="true" overload="false" type="SYNTRO_IPADDR *" signature="getMyIPAddr()"/>
            <function threadsafety="unspecified" name="getMyIPAddress" fullname="SyntroUtils::getMyIPAddress" href="syntroutils.html#getMyIPAddress" access="private" status="internal" location="SyntroUtils.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroUtils.h" lineno="191" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="getMyIPAddress()"/>
            <function threadsafety="unspecified" name="getMyMacAddr" fullname="SyntroUtils::getMyMacAddr" href="syntroutils.html#getMyMacAddr" access="public" status="commendable" location="SyntroUtils.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroUtils.h" lineno="158" virtual="non" meta="plain" const="false" static="true" overload="false" type="SYNTRO_MACADDR *" signature="getMyMacAddr()"/>
            <function threadsafety="unspecified" name="getMyNetMask" fullname="SyntroUtils::getMyNetMask" href="syntroutils.html#getMyNetMask" access="public" status="commendable" location="SyntroUtils.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroUtils.h" lineno="227" virtual="non" meta="plain" const="false" static="true" overload="false" type="QHostAddress" signature="getMyNetMask()"/>
            <function threadsafety="unspecified" name="getMySubnetAddress" fullname="SyntroUtils::getMySubnetAddress" href="syntroutils.html#getMySubnetAddress" access="public" status="commendable" location="SyntroUtils.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroUtils.h" lineno="226" virtual="non" meta="plain" const="false" static="true" overload="false" type="QHostAddress" signature="getMySubnetAddress()"/>
            <function threadsafety="unspecified" name="getSettings" fullname="SyntroUtils::getSettings" href="syntroutils.html#getSettings" access="public" status="commendable" location="SyntroUtils.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroUtils.h" lineno="147" virtual="non" meta="plain" const="false" static="true" overload="false" type="QSettings *" signature="getSettings()"/>
            <function threadsafety="unspecified" name="getTimestamp" fullname="SyntroUtils::getTimestamp" href="syntroutils.html#getTimestamp" access="public" status="commendable" location="SyntroUtils.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroUtils.h" lineno="221" virtual="non" meta="plain" const="false" static="true" overload="false" type="qint64" signature="getTimestamp(SYNTRO_UC8 timestamp)">
                <parameter left="SYNTRO_UC8" right="" name="timestamp" default=""/>
            </function>
            <function threadsafety="unspecified" name="insertStreamNameInPath" fullname="SyntroUtils::insertStreamNameInPath" href="syntroutils.html#insertStreamNameInPath" access="public" status="commendable" location="SyntroUtils.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroUtils.h" lineno="185" virtual="non" meta="plain" const="false" static="true" overload="false" type="QString" signature="insertStreamNameInPath(const QString &amp; streamSource, const QString &amp; streamName)">
                <parameter left="const QString &amp;" right="" name="streamSource" default=""/>
                <parameter left="const QString &amp;" right="" name="streamName" default=""/>
            </function>
            <function threadsafety="unspecified" name="isInMySubnet" fullname="SyntroUtils::isInMySubnet" href="syntroutils.html#isInMySubnet" access="public" status="commendable" location="SyntroUtils.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroUtils.h" lineno="228" virtual="non" meta="plain" const="false" static="true" overload="false" type="bool" signature="isInMySubnet(SYNTRO_IPADDR IPAddr)">
                <parameter left="SYNTRO_IPADDR" right="" name="IPAddr" default=""/>
            </function>
            <function threadsafety="unspecified" name="isReservedNameCharacter" fullname="SyntroUtils::isReservedNameCharacter" href="syntroutils.html#isReservedNameCharacter" access="public" status="commendable" location="SyntroUtils.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroUtils.h" lineno="183" virtual="non" meta="plain" const="false" static="true" overload="false" type="bool" signature="isReservedNameCharacter(char value)">
                <parameter left="char" right="" name="value" default=""/>
            </function>
            <function threadsafety="unspecified" name="isReservedPathCharacter" fullname="SyntroUtils::isReservedPathCharacter" href="syntroutils.html#isReservedPathCharacter" access="public" status="commendable" location="SyntroUtils.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroUtils.h" lineno="184" virtual="non" meta="plain" const="false" static="true" overload="false" type="bool" signature="isReservedPathCharacter(char value)">
                <parameter left="char" right="" name="value" default=""/>
            </function>
            <function threadsafety="unspecified" name="isSendOK" fullname="SyntroUtils::isSendOK" href="syntroutils.html#isSendOK" access="public" status="commendable" location="SyntroUtils.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroUtils.h" lineno="162" virtual="non" meta="plain" const="false" static="true" overload="false" type="bool" signature="isSendOK(unsigned char seq, unsigned char ack)">
                <parameter left="unsigned char" right="" name="seq" default=""/>
                <parameter left="unsigned char" right="" name="ack" default=""/>
            </function>
            <function threadsafety="unspecified" name="loadStandardSettings" fullname="SyntroUtils::loadStandardSettings" href="syntroutils.html#loadStandardSettings" access="public" status="commendable" location="SyntroUtils.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroUtils.h" lineno="146" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="loadStandardSettings(const char * appType, QStringList arglist)">
                <parameter left="const char *" right="" name="appType" default=""/>
                <parameter left="QStringList" right="" name="arglist" default=""/>
            </function>
            <function threadsafety="unspecified" name="makeUIDSTR" fullname="SyntroUtils::makeUIDSTR" href="syntroutils.html#makeUIDSTR" access="public" status="commendable" location="SyntroUtils.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroUtils.h" lineno="201" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="makeUIDSTR(SYNTRO_UIDSTR UIDStr, SYNTRO_MACADDRSTR macAddress, int instance)">
                <parameter left="SYNTRO_UIDSTR" right="" name="UIDStr" default=""/>
                <parameter left="SYNTRO_MACADDRSTR" right="" name="macAddress" default=""/>
                <parameter left="int" right="" name="instance" default=""/>
            </function>
            <function threadsafety="unspecified" name="removeStreamNameFromPath" fullname="SyntroUtils::removeStreamNameFromPath" href="syntroutils.html#removeStreamNameFromPath" access="public" status="commendable" location="SyntroUtils.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroUtils.h" lineno="186" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="removeStreamNameFromPath(const QString &amp; servicePath, QString &amp; streamSource, QString &amp; streamName)">
                <parameter left="const QString &amp;" right="" name="servicePath" default=""/>
                <parameter left="QString &amp;" right="" name="streamSource" default=""/>
                <parameter left="QString &amp;" right="" name="streamName" default=""/>
            </function>
            <function threadsafety="unspecified" name="setTimestamp" fullname="SyntroUtils::setTimestamp" href="syntroutils.html#setTimestamp" access="public" status="commendable" location="SyntroUtils.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroUtils.h" lineno="220" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="setTimestamp(SYNTRO_UC8 timestamp)">
                <parameter left="SYNTRO_UC8" right="" name="timestamp" default=""/>
            </function>
            <function threadsafety="unspecified" name="swapEHead" fullname="SyntroUtils::swapEHead" href="syntroutils.html#swapEHead" access="public" status="commendable" location="SyntroUtils.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroUtils.h" lineno="165" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="swapEHead(SYNTRO_EHEAD * ehead)">
                <parameter left="SYNTRO_EHEAD *" right="" name="ehead" default=""/>
            </function>
            <function threadsafety="unspecified" name="swapUID" fullname="SyntroUtils::swapUID" href="syntroutils.html#swapUID" access="public" status="commendable" location="SyntroUtils.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroUtils.h" lineno="205" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="swapUID(SYNTRO_UID * a, SYNTRO_UID * b)">
                <parameter left="SYNTRO_UID *" right="" name="a" default=""/>
                <parameter left="SYNTRO_UID *" right="" name="b" default=""/>
            </function>
            <function threadsafety="unspecified" name="syntroAppExit" fullname="SyntroUtils::syntroAppExit" href="syntroutils.html#syntroAppExit" access="public" status="commendable" location="SyntroUtils.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroUtils.h" lineno="152" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="syntroAppExit()"/>
            <function threadsafety="unspecified" name="syntroAppInit" fullname="SyntroUtils::syntroAppInit" href="syntroutils.html#syntroAppInit" access="public" status="commendable" location="SyntroUtils.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroUtils.h" lineno="151" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="syntroAppInit()"/>
            <function threadsafety="unspecified" name="syntroLibVersion" fullname="SyntroUtils::syntroLibVersion" href="syntroutils.html#syntroLibVersion" access="public" status="commendable" location="SyntroUtils.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroUtils.h" lineno="142" virtual="non" meta="plain" const="false" static="true" overload="false" type="const char *" signature="syntroLibVersion()"/>
            <function threadsafety="unspecified" name="syntroTimerExpired" fullname="SyntroUtils::syntroTimerExpired" href="syntroutils.html#syntroTimerExpired" access="public" status="commendable" location="SyntroUtils.h" filepath="C:/Syntro/SyntroCore/SyntroLib/SyntroUtils.h" lineno="167" virtual="non" meta="plain" const="false" static="true" overload="false" type="bool" signature="syntroTimerExpired(qint64 now, qint64 start, qint64 interval)">
                <parameter left="qint64" right="" name="now" default=""/>
                <parameter left="qint64" right="" name="start" default=""/>
                <parameter left="qint64" right="" name="interval" default=""/>
            </function>
        </class>
        <page name="index.html" href="index.html" access="public" status="commendable" location="index.qdoc" filepath="C:/Syntro/SyntroCore/qdoc/index.qdoc" lineno="1" subtype="page" title="SyntroCore" fulltitle="SyntroCore" subtitle="" module="SyntroCore">
            <keyword name="syntrocore-reference-documentation"/>
            <contents name="class-reference" title="Class Reference" level="1"/>
        </page>
    </namespace>
</INDEX>
